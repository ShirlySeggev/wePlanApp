{"version":3,"sources":["pages/Home.jsx","services/http.service.js","services/util.service.js","services/board.service.js","services/socket.service.js","store/actions/board.actions.js","cmps/task/TaskDetails/TaskLabelPreview.jsx","cmps/shared/MemberAvatar.jsx","cmps/task/TaskDetails/TaskMembersPreview.jsx","cmps/task/TaskPreview.jsx","cmps/task/TaskList.jsx","cmps/shared/ModalHeader.jsx","cmps/group/GroupHeaderBgc.jsx","cmps/group/GroupHeader.jsx","cmps/task/TaskAdd.jsx","cmps/group/GroupPreview.jsx","cmps/group/GroupAdd.jsx","cmps/group/GroupList.jsx","cmps/board/BoardBackground.jsx","cmps/board/ActivityLog.jsx","services/user.service.js","cmps/board/BoardMembers.jsx","store/actions/user.actions.js","cmps/board/BoardBackgroundImg.jsx","cmps/board/BoardMenu.jsx","cmps/shared/Loading.jsx","cmps/board/BoardHeader.jsx","cmps/shared/SectionTitle.jsx","cmps/task/TaskDetails/TaskDetailsHeader.jsx","cmps/task/TaskDetails/CheckBox.jsx","cmps/task/TaskDetails/TaskComment.jsx","cmps/task/TaskDetails/TaskDetailsActivity.jsx","cmps/task/TaskDetails/TaskDetailsDescription.jsx","cmps/task/TaskCheckList/ChecklistTodoPreview.jsx","cmps/task/TaskCheckList/ChecklistAddTodo.jsx","cmps/task/TaskCheckList/ChecklistProgressBar.jsx","cmps/task/TaskCheckList/ChecklistPreview.jsx","cmps/task/TaskCheckList/ChecklistList.jsx","cmps/task/TaskCheckList/ChecklistAdd.jsx","cmps/task/TaskDetails/TaskDueDate.jsx","services/cloudinary.service.js","cmps/task/TaskDetails/TaskImg.jsx","cmps/task/TaskDetails/TaskDetails.jsx","cmps/task/TaskDetails/TaskMembers.jsx","cmps/task/TaskDetails/TaskLabel.jsx","pages/WePlanApp.jsx","cmps/board/BoardPreview.jsx","cmps/board/BoardList.jsx","pages/Boards.jsx","assets/img/logo.jpeg","cmps/user/GoogleLogin.jsx","services/google.service.js","cmps/user/UserLogin.jsx","cmps/user/UserSignup.jsx","cmps/user/GoogleLogout.jsx","cmps/user/UserLogout.jsx","pages/LoginSignup.jsx","routes.js","cmps/Header.jsx","App.jsx","reportWebVitals.js","store/reducers/board.reducer.js","store/reducers/user.reducer.js","store/store.js","index.js"],"names":["Home","className","to","Component","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","window","location","assign","utilService","makeId","makeLorem","size","words","txt","Math","floor","random","length","getRandomIntInclusive","getRandomColor","num","capitalize","word","toUpperCase","substring","addActivity","user","task","group","board","app","id","createdAt","Date","now","byMember","_id","imgUrl","fullname","title","getGuestUser","possible","i","charAt","min","max","ceil","boardService","query","getById","update","remove","save","boards","boardId","activity","savedBoard","socketService","socket","setup","io","on","eventName","cb","off","emit","terminate","createSocketService","loadBoard","dispatch","type","updateBoard","boardCopy","JSON","parse","stringify","activities","TaskLabelPreview","state","isOpen","toggleLabel","setState","this","props","labelIds","map","label","isPicked","onClick","style","backgroundColor","color","MemberAvatar","member","isImg","src","round","name","TaskMembersPreview","members","TaskPreview","isChecked","groupId","dueDate","date","Intl","DateTimeFormat","day","month","format","img","isDone","TaskList","tasks","handleDragEnd","droppableId","provided","snapshot","droppableProps","ref","innerRef","index","draggableId","draggableProps","dragHandleProps","placeholder","ModalHeader","closeModal","modalPos","GroupHeaderBgc","colors","onPickBgc","idx","newColor","picked","changeGroupBgc","GroupHeader","toggleActions","toggleBgc","togglesort","handleChange","ev","target","value","editGroupName","preventDefault","updateGroup","copyGroup","bgcColor","bgc","sortGroupList","sort","task1","task2","localeCompare","toggleColor","clientX","clientY","left","top","removeGroup","onSubmit","autoComplete","spellCheck","onChange","onBlur","TaskAdd","toggleUpdate","onAddTask","taskTitle","createTask","updatedGroup","push","clearTask","loggedInUser","username","description","comments","checklists","bgColor","onFocus","GroupPreview","_Id","GroupAdd","onAddGroup","groupTitle","createGroup","addGroup","clearGroup","createdBy","GroupList","groups","onDragEnd","direction","BoardBackground","onBoardsCompose","chooseBgc","onUpdateBgc","ActivityLog","formatDistance","userService","login","logout","signup","getUsers","userId","getLoggedinUser","_getLoggedinUser","_saveLocalUser","userCred","isGoogle","_clearLocalUser","sessionStorage","setItem","getItem","clear","_BoardMembers","boardMembers","notBoardMembers","loadAllUsers","loadUsers","loadBoardMembers","loadNotBoardMembers","users","filter","find","onUpdateBoard","isBoardMember","boardMember","newBoard","currMember","toggleMembers","onClickMember","icon","faCheck","mapDispatchToProps","BoardMembers","connect","userModule","BoardBackgroundImg","imgs","onPickBgcImg","bgcImg","chooseBgcImg","backgroundImage","BoardMenu","toggleBoardBcg","toggleRemoveBoard","toggleActivity","isMember","isMembers","onRemove","onRemoveBoard","newStyle","updatedBoard","onUpdateBgImg","toggleBoardMenu","Loading","height","width","BoardHeader","toggleMenu","onChangeBoardHeader","prevProps","SectionTitle","Icon","children","restOfProps","TaskDetailsHeader","updateTaskTitle","updateTask","newTask","CheckBox","checked","TaskComment","comment","prevState","saveComment","addComment","unshift","clearComment","TaskDetailsActivity","onToggleActivity","field","BiCommentDots","TaskDetailsDescription","updateTaskDescription","BsTextLeft","rows","ChecklistTodoPreview","isTodoClick","onUpdateTodo","todo","updateTodo","toggleTodoClick","toggleIsDone","removeTodo","textDecoration","autoFocus","faTrash","CheckListAddTodo","onAddTodo","createNewTodo","addNewTodo","toggleAddTodo","ChecklistProgressBar","getCompletedRatio","todos","todoDone","completeRatio","completed","ChecklistPreview","isAddTodo","updateChecklistTitle","checklist","findChecklistIdx","newChecklist","updatedTask","splice","removeChecklist","findIndex","todoId","newTodos","listIdx","todoIdx","currTodo","Idx","ChecklistList","ChecklistAdd","onAddChecklist","createNewChecklist","toggleAddCheckList","onKeyDown","key","shiftKey","TaskDueDate","handleDateChange","valueAsNumber","onSaveDueDate","toggleDueDate","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","then","json","catch","err","error","TaskImg","onUpload","updateImg","toggleImgUpload","htmlFor","hidden","React","TaskMembers","taskMembers","notTaskMembers","taskMember","loadTaskMembers","loadNotTaskMembers","TaskLabel","labels","labelsRef","labelId","newLabels","onPickLabel","updateLabel","onUpdateLabel","toggleTaskLabel","setLabelsRef","forEach","createRef","setFocus","stopPropagation","current","focus","_TaskDetails","isDate","loadTask","match","taskId","groupIdx","taskIdx","removeTask","history","copyTask","copiedTask","currGroup","computedValue","deletImg","taskDetailsRef","getBoundingClientRect","parseFloat","toggle","computed","dueDateToShow","BsImage","alt","TaskDetails","boardModule","_WePlanApp","removeBoard","newGroup","source","destination","newGroups","_reorder","newTasks","sourceGroup","destinationGroup","sourceGroupIdx","sourceGroupItems","Array","from","transferedItem","destinationGroupIdx","destinationGroupItems","list","sourceIdx","destIdx","items","removedItem","bg","path","component","WePlanApp","BoardPreview","BoardList","_Boards","isModalOpen","newBoardModal","onAddBoard","boardTitle","boardBgc","boardBgcImg","createBoard","addBoard","loadBoards","msg","HiOutlineViewBoards","required","Boards","LoginGoogle","submitUser","setMsg","clientId","buttonText","onSuccess","googleUser","profileObj","email","imageUrl","password","googleId","refreshTiming","tokenObj","expires_in","refreshToken","reloadAuthResponse","newAuthRes","localStorage","id_token","setTimeout","refreshTokenSetup","onFailure","cookiePolicy","isSignedIn","UserLogin","onSubmitUser","toggleNewUser","UserSignup","passwordConfirm","LogoutGoogle","onLogoutSuccess","UserLogout","isCheckLogout","onUserLogout","onUserLogoutRes","userLogout","_LoginSignup","isNewUser","setUser","logo","loggedUser","LoginSignup","routes","_Header","Header","_App","route","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","localLoggedinUser","loggedinUser","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c0dd583.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"home-page\">\r\n                <section className=\"homepage\">\r\n                    <div className=\"homepage-header flex column justify-center align-center\">\r\n                        <h1>WePlan<span className=\"smart\">.</span></h1>\r\n                        <h2 className=\"sec-header\">Task Managment,</h2>\r\n                        <h2 className=\"sec-header\">The Smart Way.</h2>\r\n                        <Link className=\"home-link flex align-center justify-center cta-btn primary-btn \" to=\"/board\">Check our boards</Link>\r\n                    </div>\r\n                    <div className=\"homepage-img\">\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"features  \">\r\n                </section>\r\n                <footer className=\"flex align-center justify-center\">\r\n                    <p>® 2021 WePlan | Shirly Seggev | Linoy Fakiro | Gal Nekel</p>\r\n                </footer>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n            //     router.push('/login')\r\n        }\r\n        throw err\r\n    }\r\n}","export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive,\r\n    getRandomColor,\r\n    capitalize,\r\n    addActivity,\r\n    getGuestUser\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn'];\r\n    var txt = '';\r\n    while (size > 0) {\r\n        size--;\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' ';\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \r\n}\r\n\r\nfunction getRandomColor() {\r\n    var colors = ['#eca1a6', '#b1cbbb', '#92a8d1', '#f7786b', '#ADD8E6'];\r\n    var num = getRandomIntInclusive(0, 4);\r\n    return colors[num];\r\n}\r\n\r\nfunction capitalize(word) {\r\n    return word[0].toUpperCase() + word.substring(1)\r\n}\r\n\r\nfunction addActivity(user, txt, task, group, board, app) {\r\n    return {\r\n        id: makeId(),\r\n        txt,\r\n        createdAt: Date.now(),\r\n        byMember: {\r\n            _id: user._id,\r\n            imgUrl: user.imgUrl,\r\n            fullname: user.fullname,\r\n        },\r\n        task: task ? { id: task.id, title: task.title } : null,\r\n        group: group ? { id: group.id, title: group.title } : null,\r\n        board: board ? { _id: board._id, title: board.title } : null,\r\n        app: app ? { _id: Date.now(), app } : null,\r\n    }\r\n}\r\n\r\nfunction getGuestUser() {\r\n    return {\r\n        _id: \"u100\",\r\n        fullname: \"Guest User\",\r\n        imgUrl: \"https://res.cloudinary.com/dzzvf5ewj/image/upload/v1622888211/vjpdzmerodpx1lizxs8p.png\"\r\n    }\r\n}","// import axios from 'axios';\r\nimport { httpService } from './http.service'\r\nimport { asyncBoardService } from './async-board.service.js';\r\nimport { utilService } from './util.service';\r\n\r\nconst STORAGE_KEY = 'boards';\r\nconst BASE_URL = 'board'\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    update,\r\n    remove,\r\n    save\r\n}\r\n\r\n\r\nasync function query() {\r\n    // return asyncBoardService.query(STORAGE_KEY)\r\n    const boards = await httpService.get(BASE_URL)\r\n    return boards;\r\n}\r\n\r\nasync function getById(boardId) {\r\n    // return asyncBoardService.get(STORAGE_KEY, boardId);\r\n    return await httpService.get(BASE_URL + '/' + boardId)\r\n}\r\n\r\nasync function remove(boardId) {\r\n    // return asyncBoardService.remove(STORAGE_KEY, boardId);\r\n    await httpService.delete(BASE_URL + '/' + boardId)\r\n}\r\n\r\nasync function update(board, activity) {\r\n    // return asyncBoardService.put(STORAGE_KEY, board)\r\n    await httpService.put(BASE_URL + '/' + board._id, { board, activity })\r\n}\r\n\r\nasync function save(board) {\r\n    // board._id = utilService.makeId()\r\n    // board.createdAt = Date.now()\r\n    // return asyncBoardService.post(STORAGE_KEY, board)\r\n    const savedBoard = await httpService.post(BASE_URL, board)\r\n    return savedBoard\r\n}\r\n\r\n","import io from 'socket.io-client';\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')\r\n  ? ''\r\n  : '//localhost:3030';\r\n\r\nexport const socketService = createSocketService();\r\n\r\nwindow.socketService = socketService;\r\n\r\nfunction createSocketService() {\r\n  var socket;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb) {\r\n      socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n","import { boardService } from '../../services/board.service.js'\r\nimport { socketService } from '../../services/socket.service'\r\n\r\n\r\n\r\nexport function loadBoards() {\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.query()\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('BoardActions: err in loading boards', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.getById(boardId)\r\n            dispatch({ type: 'SET_BOARD', board })\r\n        } catch (err) {\r\n            console.log('BoardActions: err in loadBoard', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function addBoard(board) {\r\n    return async dispatch => {\r\n        try {\r\n            const newBoard = await boardService.save(board)\r\n            dispatch({ type: 'ADD_BOARD', board: newBoard })\r\n            socketService.emit('board added', 'creating new board')\r\n        } catch (err) {\r\n            console.log('BoardActions: err in save board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoard(board, activity) {\r\n    return async dispatch => {\r\n        try {\r\n            const boardCopy = JSON.parse(JSON.stringify(board));\r\n            dispatch({ type: 'SET_BOARD', board: boardCopy })\r\n            delete board.activities\r\n            await boardService.update(board, activity)\r\n            socketService.emit('board updated', board._id)\r\n        } catch (err) {\r\n            console.log('BoardActions: err in updateBoard', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n            await boardService.remove(boardId)\r\n            socketService.emit('board removed', 'removing board')\r\n        } catch (err) {\r\n            console.log('BoardActions: err in removeBoard', err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { Fragment, Component } from 'react';\r\n\r\nexport class TaskLabelPreview extends Component {\r\n\r\n    state = {\r\n        isOpen: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        const status = this.props.isOpen;\r\n        this.setState({ isOpen: status })\r\n    }\r\n\r\n    toggleLabel = () => {\r\n        this.setState({ isOpen: !this.state.isOpen })\r\n    }\r\n\r\n    render() {\r\n        const { labelIds } = this.props;\r\n        const { isOpen } = this.state;\r\n        return (\r\n            <Fragment>\r\n                {labelIds.map(label => {\r\n                    return label.isPicked ?\r\n                        <div className={`label ${isOpen && 'open'}`} onClick={this.toggleLabel} style={{ backgroundColor: label.color }} key={label.id}><span>{isOpen ? label.title : ''}</span></div> :\r\n                        ''\r\n                })}\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}","import Avatar from 'react-avatar';\n\n\nexport default function MemberAvatar({ member }) {\n    if(!member) return <h1></h1>;\n    const isImg = member?.imgUrl;\n    return (\n        <div>\n            {isImg &&\n                < Avatar src={member.imgUrl} className=\"member-avatar\" round={true} size={30} />\n            }\n            {!isImg &&\n                < Avatar\n                    color={'#0079bf'}\n                    // src={member.imgUrl}\n                    className=\"member-avatar\"\n                    name={member.fullname.charAt(0)}\n                    round={true}\n                    size={30}\n                />\n            }\n\n        </div>\n    )\n}\n\n","import MemberAvatar from '../../shared/MemberAvatar'\r\n\r\nexport function TaskMembersPreview({members}) {\r\n    return (\r\n        <div className=\"task-members-preview-avatar\">\r\n            {members.map(member =>\r\n                <MemberAvatar member={member} key={member._id} />\r\n            )}\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AiOutlineClockCircle } from 'react-icons/ai';\r\nimport { BiEditAlt } from 'react-icons/bi';\r\nimport { FiCheckSquare } from 'react-icons/fi';\r\nimport { TaskLabelPreview } from './TaskDetails/TaskLabelPreview';\r\nimport { TaskMembersPreview } from './TaskDetails/TaskMembersPreview';\r\n\r\nexport class TaskPreview extends Component {\r\n    state = {\r\n        isChecked: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        const { task, board, groupId } = this.props;\r\n        const { id, title, dueDate, labelIds, members } = task;\r\n        let date = new Intl.DateTimeFormat('he-IL', { day: '2-digit', month: '2-digit', }).format(dueDate)\r\n        return (\r\n            <div className=\"task-preview\">\r\n                {labelIds && <div className=\"taskDetails-labels\" >\r\n                    <TaskLabelPreview labelIds={labelIds} isOpen={false} />\r\n                </div>}\r\n                <Link className=\"task-preview-info\" to={`/board/${board._id}/group/${groupId}/task/${id}`}>\r\n                    <div className=\"task-preview-header\">\r\n                        <span className=\"task-preview-title\">{title}</span>\r\n                        <Link to={`/board/${board._id}/group/${groupId}/task/${id}`}><BiEditAlt className=\"editable\" /></Link>\r\n                    </div>\r\n                    {task.img?.url ? <img className=\"task-preview-img\" src={task.img.url} /> : ''}\r\n                    <div className=\"task-preview-status\">\r\n                        {members && <div className=\"task-preview-members\" >\r\n                            < TaskMembersPreview members={members} />\r\n                        </div>}\r\n                        {task.isDone &&\r\n                            <div className=\"badges done\"><FiCheckSquare /> <span>1/1</span></div>}\r\n                        {/* <FiCheckSquare className=\"badges\"/>} */}\r\n                        {task.dueDate &&\r\n                            <div className=\"badges date\"> <AiOutlineClockCircle /><span> {date}</span></div>}\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { TaskPreview } from './TaskPreview.jsx';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nexport function TaskList({ tasks, groupId, board, handleDragEnd }) {\r\n    return (\r\n        <section>\r\n            <Droppable droppableId={groupId} type=\"task\">\r\n                {(provided, snapshot) => (\r\n\r\n                    <div className=\"tasks-container\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {tasks.map((task, index) => {\r\n                            return (\r\n                                <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                                    {(provided) => (\r\n                                       <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                                            <TaskPreview\r\n                                                task={task}\r\n                                                key={task.id}\r\n                                                groupId={groupId}\r\n                                                provided={provided}\r\n                                                board={board}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            )\r\n                        })}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </section>\r\n    )\r\n}\r\n","import { CgClose } from 'react-icons/cg';\n\nexport function ModalHeader({ title, className, closeModal }) {\n\n    return <div className={`modalHeader ${className}`}>\n        <div className=\"modalHeader container\">\n            <span className=\"modalHeader title\">{title}</span>\n            <CgClose className=\"modalHeader icon\" onClick={closeModal} />\n        </div>\n    </div>\n}","import { Component } from 'react';\r\n\r\n\r\nexport class GroupHeaderBgc extends Component {\r\n    state = {\r\n        colors: [\r\n            { id: 'l101', color: \"#FADA5E\", isPicked: false },\r\n            { id: 'l102', color: \"#FCC9A5\", isPicked: false },\r\n            { id: 'l103', color: \"#FFB1B8\", isPicked: false },\r\n            { id: 'l104', color: \"#C8BCD4\", isPicked: false },\r\n            { id: 'l105', color: \"#b1d3dd\", isPicked: false },\r\n            { id: 'l106', color: \"#ACCFBF\", isPicked: false },\r\n        ],\r\n        color:null\r\n        \r\n    }\r\n    \r\n    onPickBgc = (idx) => {\r\n        console.log('on pick');\r\n        console.log(idx);\r\n        const newColor=this.state.colors[idx].color\r\n        this.setState({ picked: this.state.colors[idx].isPicked=true })\r\n        // console.log(newColor);\r\n        this.props.changeGroupBgc(newColor)\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { colors } = this.state;\r\n        return (\r\n            <section className=\"TaskGroupBgc-modal\">\r\n                <div className=\"colors-container\">\r\n                {colors.map((color, idx) => {\r\n                    return (\r\n                        <div className=\"b\" key={color.id}\r\n                             style={ {backgroundColor: color.color} }\r\n                             onClick={() => this.onPickBgc(idx)}> \r\n                        </div>\r\n                    )\r\n                })\r\n                }</div>\r\n            </section>\r\n        )\r\n\r\n    }\r\n\r\n}","import { Component } from 'react';\r\nimport { ModalHeader } from '../shared/ModalHeader';\r\nimport { GroupHeaderBgc } from './GroupHeaderBgc';\r\nimport { BsThreeDots } from 'react-icons/bs';\r\n\r\nlet modalPos;\r\nexport class GroupHeader extends Component {\r\n    state = {\r\n        toggleActions: false,\r\n        group: {\r\n            title: '',\r\n        },\r\n        toggleBgc: false,\r\n        togglesort: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props.group;\r\n        const group = { title };\r\n        this.setState({ group });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        var group = { ...this.state.group };\r\n        var { name, value } = ev.target;\r\n        group[name] = value;\r\n        this.setState({ group })\r\n    }\r\n\r\n    editGroupName = (ev) => {\r\n        ev.preventDefault();\r\n        const { group, updateGroup } = this.props;\r\n        const copyGroup = { ...group };\r\n        copyGroup.title = this.state.group.title;\r\n        updateGroup(copyGroup, `edited list name ${copyGroup.title}`);\r\n    }\r\n\r\n    changeGroupBgc = (bgcColor) => {\r\n        console.log(bgcColor);\r\n        const { group, updateGroup } = this.props;\r\n        const copyGroup = { ...group };\r\n        copyGroup.style.bgc = bgcColor;\r\n        updateGroup(copyGroup, `edited ${copyGroup.title}'s color`);\r\n    }\r\n    sortGroupList = () => {\r\n        const { group, updateGroup } = this.props;\r\n        const sortedTasks = group.tasks.sort((task1, task2) => {\r\n            return task1.title.localeCompare(task2.title)\r\n        })\r\n        updateGroup(sortedTasks)\r\n    }\r\n\r\n    toggleColor = () => {\r\n        this.setState({ toggleBgc: !this.state.toggleBgc })\r\n    }\r\n\r\n    toggleActions = (ev) => {\r\n        const { clientX, clientY } = ev\r\n        modalPos = { left: (clientX) + 'px', top: (clientY - 80) + 'px' }\r\n        this.setState({ toggleActions: !this.state.toggleActions })\r\n    }\r\n\r\n    removeGroup = () => {\r\n        const { group, removeGroup } = this.props;\r\n        removeGroup(group.id);\r\n    }\r\n\r\n    render() {\r\n        const { title } = this.state.group;\r\n        const { style } = this.props.group;\r\n        const { toggleActions, toggleBgc } = this.state;\r\n\r\n        return (\r\n            <section className=\"GroupHeader\" style={{ backgroundColor: style.bgc }}>\r\n                <form className=\"group-header\" onSubmit={this.editGroupName}>\r\n                    <input type=\"text\" \r\n                    name=\"title\" \r\n                    value={title} \r\n                    autoComplete=\"off\" \r\n                    spellCheck=\"false\" \r\n                    onChange={this.handleChange} \r\n                    onBlur={this.editGroupName}\r\n                    />\r\n                    <BsThreeDots className=\"icon\" onClick={this.toggleActions} />\r\n                </form>\r\n                <div className=\"group-actions\">\r\n                    {toggleActions && <div className=\"group-menu\" >\r\n                        <ModalHeader title='List actions' closeModal={this.toggleActions} />\r\n                        <ul style={{ ...modalPos }} className=\"menu-options\">\r\n                            <li onClick={this.toggleColor} >Change group background</li>\r\n                            {toggleBgc && <GroupHeaderBgc changeGroupBgc={this.changeGroupBgc} />}\r\n                            <li onClick={this.removeGroup}>Delete list</li>\r\n                            <li onClick={this.sortGroupList}>Sort list by name</li>\r\n\r\n                        </ul>\r\n                    </div>}\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n","import { Component, Fragment } from 'react';\r\nimport { utilService } from '../../services/util.service.js';\r\nimport { CgClose } from 'react-icons/cg';\r\n\r\n\r\nexport class TaskAdd extends Component {\r\n    state = {\r\n        toggleUpdate: false,\r\n        task: {\r\n            title: '',\r\n        }\r\n    }\r\n\r\n    toggleUpdate = () => {\r\n        this.setState({ toggleUpdate: !this.state.toggleUpdate })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        var task = { ...this.state.task }\r\n        var { name, value } = ev.target\r\n        task[name] = value;\r\n        this.setState({ task })\r\n    }\r\n\r\n    onAddTask = (ev) => {\r\n        ev.preventDefault()\r\n        const taskTitle = this.state.task.title;\r\n        const task = this.createTask(taskTitle);\r\n        const { group, updateGroup } = this.props;\r\n        const updatedGroup = { ...group };\r\n        updatedGroup.tasks.push(task);\r\n        updateGroup(updatedGroup, `added ${taskTitle}`);\r\n        this.clearTask();\r\n    }\r\n\r\n    clearTask = () => {\r\n        this.setState({\r\n            toggleUpdate: false,\r\n            task: {\r\n                title: '',\r\n            }\r\n        })\r\n    }\r\n\r\n    createTask = (title) => {\r\n        const {loggedInUser} = this.props\r\n        let user\r\n        loggedInUser ? user = {...loggedInUser} : user = {_id: 'guest', fullname: 'Guest', username: 'Guest'}\r\n        const task = {\r\n            id: utilService.makeId(),\r\n            title,\r\n            isDone: false,\r\n            description: '',\r\n            comments: [],\r\n            checklists: [],\r\n            members: [],\r\n            labelIds: [],\r\n            createdAt: Date.now(),\r\n            dueDate: '',\r\n            byMember: user,\r\n            style: {\r\n                bgColor: utilService.getRandomColor()\r\n            }\r\n        }\r\n        console.log(task);\r\n        return task;\r\n    }\r\n    render() {\r\n        const { title } = this.state.task;\r\n        const { toggleUpdate } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <form className=\"taskAdd\" onSubmit={this.onAddTask}>\r\n                    <input type=\"text\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        placeholder=\"+ Add another card\"\r\n                        autoComplete=\"off\"\r\n                        spellCheck=\"false\"\r\n                        onChange={this.handleChange}\r\n                        onFocus={this.toggleUpdate}\r\n                        onBlur={this.onAddTask}\r\n                    />\r\n                </form>\r\n                {toggleUpdate &&\r\n                    <div className=\"yes-no-btns\">\r\n                        <button className=\"primary-btn\" onClick={this.onAddTask}>Add card</button>\r\n                        <CgClose className=\"cancel-btn\" onClick={this.toggleUpdate}/> \r\n                    </div>}\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { TaskList } from '../task/TaskList';\r\nimport { GroupHeader } from './GroupHeader';\r\nimport { TaskAdd } from '../task/TaskAdd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nexport function GroupPreview({ group, board, updateGroup, removeGroup, loggedInUser, handleDragEnd }) {\r\n    const { id, title, tasks } = group;\r\n\r\n\r\n    return (\r\n        <section>\r\n            <Link to={`/board/${board._Id}/`}>\r\n                <div className=\"main-screen\">\r\n                </div>\r\n            </Link>\r\n            <section className=\"group-preview\">\r\n                <div className=\"group-container\">\r\n                    <GroupHeader group={group} updateGroup={updateGroup} removeGroup={removeGroup} />\r\n                    <TaskList tasks={tasks} groupId={id} board={board} handleDragEnd={handleDragEnd} />\r\n                    <TaskAdd loggedInUser={loggedInUser} group={group} updateGroup={updateGroup} removeGroup={removeGroup}/>\r\n                </div>\r\n            </section>\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component } from 'react';\r\nimport { CgClose } from 'react-icons/cg';\r\nimport { utilService } from '../../services/util.service.js';\r\n\r\n\r\nexport class GroupAdd extends Component {\r\n    state = {\r\n        toggleUpdate: false,\r\n        group: {\r\n            title: '',\r\n        }\r\n    }\r\n\r\n    toggleUpdate = () => {\r\n        this.setState({ toggleUpdate: !this.state.toggleUpdate })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        var group = { ...this.state.group }\r\n        var { name, value } = ev.target\r\n        group[name] = value;\r\n        this.setState({ group })\r\n    }\r\n\r\n    onAddGroup = (ev) => {\r\n        console.log('onAddGroup');\r\n        ev.preventDefault();\r\n        const { title } = this.state.group;\r\n        if (!title) return this.toggleUpdate();\r\n        const groupTitle = title;\r\n        const group = this.createGroup(groupTitle);\r\n        const { addGroup } = this.props;\r\n        addGroup(group);\r\n        this.clearGroup();\r\n    }\r\n\r\n    clearGroup = () => {\r\n        this.setState({\r\n            toggleUpdate: false,\r\n            group: {\r\n                title: '',\r\n            }\r\n        })\r\n    }\r\n\r\n    createGroup = (title) => {\r\n        const group = {\r\n            id: utilService.makeId(),\r\n            createdBy: this.props.loggedInUser || utilService.getGuestUser(),\r\n            title,\r\n            tasks: [],\r\n            style: {\r\n                bgc: utilService.getRandomColor()\r\n            },\r\n        }\r\n        return group;\r\n    }\r\n\r\n    render() {\r\n        const { title } = this.state.group;\r\n        const { toggleUpdate } = this.state;\r\n        return (\r\n            <div className=\"groupAdd\">\r\n                <form onSubmit={this.onAddGroup}>\r\n                    <input type=\"text\"\r\n                        className=\"placeholder\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        placeholder=\"+ Add another list\"\r\n                        autoComplete=\"off\"\r\n                        spellCheck=\"false\"\r\n                        onChange={this.handleChange}\r\n                        onFocus={this.toggleUpdate}\r\n                        onBlur={this.onAddGroup}\r\n                    />\r\n                </form>\r\n                {toggleUpdate &&\r\n                    <div className=\"yes-no-btns\">\r\n                        <button className=\"primary-btn\" onClick={this.onAddGroup}>Add list</button>\r\n                        <CgClose className=\"cancel-btn\" onClick={this.toggleUpdate} />\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import { GroupPreview } from './GroupPreview.jsx';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { GroupAdd } from './GroupAdd';\r\n\r\nexport function GroupList({ groups, board, loggedInUser, updateGroup, removeGroup, addGroup, handleDragEnd }) {\r\n    return (\r\n        <section className=\"group-list\" >\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n                <Droppable droppableId=\"groups\" type=\"group\"  direction=\"horizontal\">\r\n                    {(provided) => (\r\n                        <div className=\"groupList-container\" {...provided.droppableProps} ref={provided.innerRef} >\r\n                            {groups.map((group, index) =>\r\n                                <Draggable key={group.id} draggableId={group.id} index={index}>\r\n                                    {(provided) => (\r\n                                        <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                                            <GroupPreview\r\n                                                group={group}\r\n                                                board={board}\r\n                                                key={group.id}\r\n                                                updateGroup={updateGroup}\r\n                                                removeGroup={removeGroup}\r\n                                                handleDragEnd={handleDragEnd}\r\n                                                provided={provided}\r\n                                                loggedInUser={loggedInUser}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            )\r\n                            }\r\n                            {provided.placeholder}\r\n                            <GroupAdd loggedInUser={loggedInUser} addGroup={addGroup} />\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </section>\r\n    )\r\n}\r\n\r\n","import { Component } from 'react';\r\n\r\n\r\nexport class BoardBackground extends Component {\r\n    state = {\r\n        bgc: [\r\n            { color: \"#b1d3dd\" },\r\n            { color: \"#FCC9A5\" },\r\n            { color: \"#FFB1B8\" },\r\n            { color: \"#C8BCD4\" },\r\n            { color: \"#ACCFBF\" },\r\n            { color: \"#FFFCDD\" },\r\n        ],\r\n    }\r\n\r\n    onPickBgc = (idx) => {\r\n        const newBgc = this.state.bgc[idx].color;\r\n        const style = { bgc: newBgc };\r\n        const { onBoardsCompose } = this.props;\r\n        if (!onBoardsCompose) this.props.onUpdateBgc(style);\r\n        else this.props.chooseBgc(style);\r\n    }\r\n\r\n    render() {\r\n        const { bgc } = this.state;\r\n        return (\r\n            <section className=\"TaskGroupBgc-modal\">\r\n                <div className=\"board-container color\">\r\n                    {bgc.map((bgc, idx) => {\r\n                        return (\r\n                            <div className=\"bgColor\" key={bgc.id}\r\n                                style={{ backgroundColor: bgc.color }}\r\n                                onClick={() => this.onPickBgc(idx)}>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport MemberAvatar from '../shared/MemberAvatar';\r\nimport { formatDistance } from 'date-fns';\r\n\r\n\r\nexport function ActivityLog({ activities }) {\r\n    if (activities.length <= 0) return   <div className=\"activity\">No activities to display</div>\r\n    return (\r\n        <section className=\"ActivityLog\">\r\n            {activities.map(activity => {\r\n                return <div key={activity.id}>\r\n                    <div className=\"activity\">\r\n                        <MemberAvatar member={activity.byMember} />\r\n                        <div className=\"activity-description\">\r\n                            <p ><span>{activity.byMember.fullname}</span> {activity.txt} to <span>\r\n                            {activity.task?.title} \r\n                            {activity.group?.title} \r\n                            {activity.board?.title}\r\n                            {activity.app?.app}\r\n                            </span>\r\n                            </p>\r\n                            <p>{formatDistance(activity.createdAt, Date.now())} ago</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            })\r\n            }\r\n        </section>\r\n\r\n    )\r\n}","import { httpService } from './http.service'\r\n\r\n\r\nconst STORAGE_KEY = 'boardUsers'\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser: _getLoggedinUser,\r\n    // increaseScore\r\n}\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/api/user' : 'http://localhost:3030/api/user';\r\n\r\n\r\nfunction getUsers() {\r\n    return httpService.get(`user`)\r\n    // return asyncUserStorage.query(STORAGE_KEY)\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`user/${userId}`)\r\n    // return asyncUserStorage.get(STORAGE_KEY, userId);\r\n\r\n}\r\n\r\nfunction remove(userId) {\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    if (_getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\n\r\n\r\n// AUTH\r\nasync function login(userCred) {\r\n    // const user = await asyncUserStorage.get(STORAGE_KEY, userCred)\r\n    const user = await httpService.post('auth/login', userCred)\r\n    try {\r\n        if (user) return _saveLocalUser(user)\r\n    } catch (err) {\r\n        console.log('error in user service, problem in login', err)\r\n        throw err\r\n    }\r\n}\r\n\r\nasync function signup(userCred, isGoogle) {\r\n    // const user = await asyncUserStorage.post(STORAGE_KEY, userCred)\r\n    console.log('user service signup', userCred);\r\n    const user = await httpService.post('auth/signup',{ userCred, isGoogle})\r\n    try {\r\n        if (user) return _saveLocalUser(user)\r\n        \r\n    } catch (err) {\r\n        console.log('error in user service signup', err)\r\n    }\r\n}\r\n\r\nasync function logout() {\r\n    _clearLocalUser();\r\n    return await httpService.post('auth/logout')\r\n}\r\n\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction _getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser') || 'null')\r\n}\r\n\r\nfunction _clearLocalUser() {\r\n    sessionStorage.clear();\r\n}\r\n\r\n\r\n\r\n","import { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport MemberAvatar from '../shared/MemberAvatar'\r\nimport { ModalHeader } from '../shared/ModalHeader';\r\nimport { loadUsers } from '../../store/actions/user.actions'\r\nimport { updateBoard } from '../../store/actions/board.actions'\r\n\r\nclass _BoardMembers extends Component {\r\n    state = {\r\n        boardMembers: [],\r\n        notBoardMembers: []\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.loadAllUsers()\r\n    }\r\n\r\n    async loadAllUsers() {\r\n        try {\r\n            await this.props.loadUsers()\r\n            this.setState({\r\n                boardMembers: this.loadBoardMembers(),\r\n                notBoardMembers: this.loadNotBoardMembers()\r\n            })\r\n        } catch (err) {\r\n            console.log('Error at loading usrers:', err)\r\n        }\r\n    }\r\n\r\n    loadBoardMembers() {\r\n        const { members } = this.props\r\n        return members\r\n    }\r\n\r\n    loadNotBoardMembers() {\r\n        const { members, users } = this.props\r\n        if (!members) return users\r\n        const notBoardMembers = users.filter(user => {\r\n            return !members.find(member => member._id === user._id)\r\n        })\r\n        return notBoardMembers\r\n    }\r\n\r\n\r\n    async onClickMember(member) {\r\n        const { users, board, onUpdateBoard } = this.props\r\n        const { boardMembers } = this.state\r\n        if(board.createdBy._id === member._id) return\r\n        if (!boardMembers) board.members = [member]\r\n        else {\r\n            let newBoard\r\n            const isBoardMember = boardMembers.find(boardMember => boardMember._id === member._id)\r\n            isBoardMember ?\r\n                newBoard = { ...board, members: board.members.filter(currMember => currMember._id !== member._id) }\r\n                : newBoard = { ...board, members: [...board.members, member] }\r\n                onUpdateBoard(newBoard, `edited members`);\r\n            this.setState({\r\n                boardMembers: this.loadBoardMembers(),\r\n                notBoardMembers: this.loadNotBoardMembers()\r\n            },() => this.loadAllUsers())\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { toggleMembers } = this.props\r\n        const { boardMembers, notBoardMembers } = this.state\r\n        return (\r\n            <div className=\"add-members-container\">\r\n                <ModalHeader title='Members' closeModal={toggleMembers} />\r\n                <ul>\r\n                    <h4 className=\"task-members-ul-title\">Invite users</h4>\r\n                    {boardMembers && boardMembers.map(member =>\r\n                        <li key={member._id} className=\"task-add-member-container\" onClick={() => this.onClickMember(member)}>\r\n                            <MemberAvatar member={member} />\r\n                            <h4>{member.fullname}</h4>\r\n                            <h4>({member.username})</h4>\r\n                            {<FontAwesomeIcon icon={faCheck} />}\r\n                        </li>)}\r\n\r\n                    {!notBoardMembers && <div>No available members to add</div>}\r\n                    {notBoardMembers && notBoardMembers.map(member =>\r\n                        <li key={member._id} className=\"task-add-member-container\" onClick={() => this.onClickMember(member)}>\r\n                            <MemberAvatar member={member} />\r\n                            <h4>{member.fullname}</h4>\r\n                            <h4>({member.username})</h4>\r\n                        </li>)}\r\n\r\n                </ul>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    updateBoard\r\n}\r\n\r\n\r\n\r\nexport const BoardMembers = connect(mapStateToProps, mapDispatchToProps)(_BoardMembers)","import { userService } from '../../services/user.service.js';\r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'LOADING_START' })\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n    } finally {\r\n      dispatch({ type: 'LOADING_DONE' })\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function setUser(user, isNewUser, isGoogle) {\r\n  return async (dispatch) => {\r\n    var loggedUser;\r\n    try {\r\n      if (isNewUser || isGoogle) loggedUser = await userService.signup(user, isGoogle);\r\n      else loggedUser = await userService.login(user);\r\n      delete loggedUser.password\r\n      const action = {\r\n        type: \"SET_USER\",\r\n        loggedUser,\r\n      };\r\n      dispatch(action);\r\n    } catch (err) {\r\n      console.log(\"UserActions: err in seting the user:\", err);\r\n      return ('no match')\r\n    }\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return async (dispatch) => {\r\n    try {\r\n      userService.logout();\r\n      const action = {\r\n        type: \"CLEAR_USER\",\r\n      };\r\n      // sessionService.clear()\r\n      dispatch(action);\r\n    } catch {\r\n      console.log(\"couldnt log out!!\");\r\n    }\r\n  };\r\n}\r\n\r\n// ---------------------------------------------------------------------------------\r\n// export function removeUser(userId) {\r\n//   return async dispatch => {\r\n//     try {\r\n//       await userService.remove(userId)\r\n//       dispatch({ type: 'REMOVE_USER', userId })\r\n//     } catch (err) {\r\n//       console.log('UserActions: err in removeUser', err)\r\n//     }\r\n//   }\r\n// }\r\n// export function setUserAfterRefresh(loggedUser) {\r\n//   return (dispatch) => {\r\n//     const action = {\r\n//       type: \"SET_USER\",\r\n//       loggedUser,\r\n//     };\r\n//     dispatch(action);\r\n//   };\r\n// }\r\n\r\n","import { Component } from 'react';\r\n\r\n\r\nexport class BoardBackgroundImg extends Component {\r\n    state = {\r\n        imgs: [\r\n            \"https://res.cloudinary.com/dzzvf5ewj/image/upload/v1622840656/faxybtxpe586a2lc5nsh.jpg\",\r\n            \"https://res.cloudinary.com/dzzvf5ewj/image/upload/v1622842304/tkbrkv8xdk3k3f2swa25.jpg\",\r\n            \"https://res.cloudinary.com/dgmwynlbw/image/upload/v1585211764/bgc/9.jpg\",\r\n            \"https://res.cloudinary.com/dgmwynlbw/image/upload/v1585211772/bgc/10.jpg\",\r\n            \"https://res.cloudinary.com/dgmwynlbw/image/upload/v1585211748/bgc/7.jpg\",\r\n            \"https://res.cloudinary.com/dgmwynlbw/image/upload/v1585210885/bgc/4.webp\",\r\n            // \"https://res.cloudinary.com/dgmwynlbw/image/upload/v1585210935/bgc/2.jpg\",\r\n            // \"https://res.cloudinary.com/dgmwynlbw/image/upload/v1585211744/bgc/6.jpg\",\r\n            // \"https://res.cloudinary.com/dgmwynlbw/image/upload/v1585210331/bgc/1.jpg\",\r\n            // \"https://res.cloudinary.com/dgmwynlbw/image/upload/v1585210885/bgc/3.webp\",\r\n            // \"https://res.cloudinary.com/dgmwynlbw/image/upload/v1585210885/bgc/5.webp\",\r\n            // \"https://res.cloudinary.com/dgmwynlbw/image/upload/v1585211804/bgc/12.jpg\",\r\n        ]\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log('helo');\r\n\r\n    }\r\n\r\n    onPickBgcImg = (idx) => {\r\n        const bgcImg = this.state.imgs[idx]\r\n        // const { onBoardsCompose } = this.props;\r\n        // if (!onBoardsCompose) this.props.onUpdateBgcImg(style);\r\n        // else this.props.chooseBgcImg(style);\r\n        this.props.chooseBgcImg(bgcImg)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { imgs } = this.state;\r\n        return (\r\n            <section className=\"TaskGroupBgc-modal\">\r\n                <div className=\"board-container img\">\r\n                    {imgs.map((img, idx) => {\r\n                        return (\r\n                            <img className=\"bgImg\" key={img.id}\r\n                                style={{ backgroundImage: `url(${img})` }}\r\n                                onClick={() => this.onPickBgcImg(idx)} />\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n    }\r\n\r\n}","import { Component } from 'react';\r\nimport { ModalHeader } from '../shared/ModalHeader.jsx';\r\nimport { BoardBackground } from './BoardBackground.jsx';\r\nimport { ActivityLog } from './ActivityLog.jsx';\r\nimport { CgClose } from 'react-icons/cg';\r\nimport { BoardMembers } from './BoardMembers';\r\nimport { BoardBackgroundImg } from './BoardBackgroundImg.jsx';\r\n\r\nexport class BoardMenu extends Component {\r\n    state = {\r\n        toggleBoardBcg: false,\r\n        toggleRemoveBoard: false,\r\n        toggleActivity: false,\r\n        isMember: false\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    toggleBoardBcg = () => {\r\n        this.setState({ toggleBoardBcg: !this.state.toggleBoardBcg })\r\n    }\r\n\r\n    toggleRemoveBoard = () => {\r\n        this.setState({ toggleRemoveBoard: !this.state.toggleRemoveBoard })\r\n    }\r\n    toggleActivity = () => {\r\n        this.setState({ toggleActivity: !this.state.toggleActivity })\r\n    }\r\n    toggleMembers = () => {\r\n        this.setState({ isMembers: !this.state.isMembers })\r\n    }\r\n\r\n\r\n    onRemove = () => {\r\n// const {createdBy} = this.props.board\r\n// console.log(createdBy);\r\n        const { board, onRemoveBoard } = this.props;\r\n        onRemoveBoard(board._id);\r\n        // this.props.history.push('/board');\r\n    }\r\n\r\n    onUpdateBgc = (newStyle) => {\r\n        const { board, onUpdateBoard } = this.props;\r\n        const updatedBoard = { ...board };\r\n        updatedBoard.style = newStyle;\r\n        onUpdateBoard(updatedBoard, `edited background color`);\r\n    }\r\n\r\n    onUpdateBgImg = (newStyle) => {\r\n        const { board, onUpdateBoard } = this.props;\r\n        const updatedBoard = { ...board };\r\n        updatedBoard.style.img = newStyle;\r\n        console.log(updatedBoard.style);\r\n        onUpdateBoard(updatedBoard, `edited background image`);\r\n    }\r\n\r\n    toggleMembers = () => {\r\n        this.setState({ isMembers: !this.state.isMembers })\r\n    }\r\n\r\n    render() {\r\n        const { toggleBoardBcg, toggleRemoveBoard, toggleActivity, isMembers } = this.state;\r\n        const { toggleBoardMenu, board, onUpdateBoard } = this.props;\r\n        const { activities } = this.props.board;\r\n        return (\r\n            <section className=\"wePlanApp-menu open\" >\r\n                <ModalHeader title='About this board' closeModal={toggleBoardMenu} />\r\n                <ul className=\"menu-options\">\r\n                    <li onClick={this.toggleBoardBcg}>Change board background</li>\r\n\r\n                    <li onClick={this.toggleMembers} >Add a member</li>\r\n\r\n                    <li onClick={this.toggleRemoveBoard}>Delete board</li>\r\n                    <li onClick={this.toggleActivity}>Activity menu</li>\r\n                    <li>Board dashboard</li>\r\n                    {toggleBoardBcg &&\r\n                        <div>\r\n                            <BoardBackground onUpdateBgc={this.onUpdateBgc} />\r\n                            <BoardBackgroundImg chooseBgcImg={this.onUpdateBgImg} />\r\n                        </div>\r\n                    }\r\n                    {toggleRemoveBoard &&\r\n                        <div className=\"delete-board-container\">\r\n                            <p>Are you shure?</p>\r\n                            <div className=\"yes-no-btns\">\r\n                                <button className=\"primary-btn\" onClick={this.onRemove}>Yes, delete board</button>\r\n                                <CgClose className=\"cancel-btn\" onClick={this.toggleRemoveBoard} />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {isMembers && <BoardMembers toggleMembers={this.toggleMembers} onUpdateBoard={onUpdateBoard} members={board.members} board={board} />}\r\n                    {toggleActivity && <ActivityLog activities={activities} />}\r\n                </ul>\r\n\r\n            </section >\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport function Loading() {\r\n    return (\r\n        <div className=\"loader\">\r\n            <Loader type=\"Bars\" color=\"#ebecf0\" height=\"80\" width=\"80\" />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { Component } from 'react';\r\nimport MemberAvatar from '../shared/MemberAvatar';\r\nimport { BoardMenu } from './BoardMenu.jsx';\r\nimport { BsThreeDots } from 'react-icons/bs';\r\nimport { Loading } from '../shared/Loading';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { BoardMembers } from './BoardMembers';\r\n\r\nexport class BoardHeader extends Component {\r\n    state = {\r\n        isMembers: false,\r\n        toggleMenu: false,\r\n        board: {\r\n            title: '',\r\n        },\r\n        isMember: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props.board;\r\n        const board = { title };\r\n        this.setState({ board });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.board !== this.props.board) {\r\n            const { title } = this.props.board;\r\n            const board = { title };\r\n            this.setState({ board });\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        var board = { ...this.state.board };\r\n        var { name, value } = ev.target;\r\n        board[name] = value;\r\n        this.setState({ board })\r\n    }\r\n\r\n    onChangeBoardHeader = (ev) => {\r\n        ev.preventDefault();\r\n        const { board, onUpdateBoard } = this.props;\r\n        const updatedBoard = { ...board };\r\n        updatedBoard.title = this.state.board.title;\r\n        onUpdateBoard(updatedBoard, `edited ${updatedBoard.title} title`);\r\n    }\r\n\r\n    toggleBoardMenu = () => {\r\n        this.setState({ toggleMenu: !this.state.toggleMenu })\r\n    }\r\n\r\n    toggleMembers = () => {\r\n        this.setState({ isMembers: !this.state.isMembers })\r\n    }\r\n\r\n    render() {\r\n        const { board, onUpdateBoard } = this.props;\r\n        const { toggleMenu, isMembers } = this.state;\r\n        const { title } = this.state.board;\r\n        if (!board) return <Loading />\r\n        const { groups, style, members } = this.props.board;\r\n        return (\r\n            <section className=\"board-header\" >\r\n                <div className=\"board-heder-titleAndMembers\">\r\n                    <form onSubmit={this.onChangeBoardHeader}>\r\n                        <input className=\"board-header-title\" type=\"text\" name=\"title\" value={title} autoComplete=\"off\" spellCheck=\"false\" onChange={this.handleChange} />\r\n                    </form>\r\n                    <div className=\"board-members\">\r\n                        {members.map(member => <MemberAvatar member={member} key={member._id} />)}\r\n                        <div onClick={this.toggleMembers}><MemberAvatar member={{ fullname: '+' }} key={Date.now()} /></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"board-menu-btn btn\" onClick={this.toggleBoardMenu}>\r\n                    <BsThreeDots />\r\n                    <span>Show menu</span>\r\n                </div>\r\n                {toggleMenu && <BoardMenu board={board} toggleBoardMenu={this.toggleBoardMenu} onRemoveBoard={this.props.onRemoveBoard} onUpdateBoard={this.props.onUpdateBoard} />}\r\n                {isMembers && <BoardMembers toggleMembers={this.toggleMembers} onUpdateBoard={onUpdateBoard} members={board.members} board={board} />}\r\n                {/* {toggleMenu && <BoardMenu board={board} toggleBoardMenu={this.toggleBoardMenu} onRemoveBoard={this.props.onRemoveBoard} onUpdateBoard={this.props.onUpdateBoard} />} */}\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n","export function SectionTitle({className,Icon,children,...restOfProps}){\r\n    return (\r\n        <div {...restOfProps} className={`section-title ${className}`}>\r\n            <Icon className=\"icon\"/>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import { Component } from 'react';\r\nimport { BiCreditCard } from 'react-icons/bi';\r\nimport { SectionTitle } from '../../shared/SectionTitle';\r\n\r\n\r\nexport class TaskDetailsHeader extends Component {\r\n    state = {\r\n        task: {\r\n            title: '',\r\n        },\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { title } = this.props.task;\r\n        const task = { title };\r\n        this.setState({ task });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        var task = { ...this.state.task };\r\n        var { name, value } = ev.target;\r\n        task[name] = value;\r\n        this.setState({ task })\r\n    }\r\n\r\n    updateTaskTitle = (ev) => {\r\n        ev.preventDefault();\r\n        const { task, updateTask } = this.props\r\n        const newTask = { ...task };\r\n        newTask.title = this.state.task.title;\r\n        updateTask(newTask, `edited ${newTask.title} title`)\r\n    }\r\n\r\n    render() {\r\n        const { title } = this.state.task;\r\n        const { group } = this.props;\r\n        return (\r\n            <header className=\"details-main-header\">\r\n                <form className=\"details-header\" onSubmit={this.updateTaskTitle}>\r\n                    <BiCreditCard className=\"detailsIcon\" />\r\n                    <input \r\n                    className=\"task-title\" \r\n                    type=\"text\" \r\n                    name=\"title\" \r\n                    value={title} \r\n                    autoComplete=\"off\" \r\n                    spellCheck=\"false\" \r\n                    onChange={this.handleChange}\r\n                    onBlur={this.updateTaskTitle}\r\n                    />\r\n                </form>\r\n                <p className=\"taskDetails-header-subtext\">in list <span>{group.title}</span></p>\r\n            </header>\r\n        )\r\n    }\r\n\r\n}\r\n","\r\nimport { Component } from 'react';\r\n\r\nexport class CheckBox extends Component {\r\n\r\n\r\n    render() {\r\n        // const { isChecked}= this.props.task.isDone\r\n        return (\r\n                <input\r\n                    name=\"isDone\"\r\n                    checked={this.props.isChecked}\r\n                    type=\"checkbox\"\r\n                    id=\"myCheck\"\r\n                    onChange={this.props.handleChange}\r\n                    title=\"Done?\"\r\n                >\r\n                </input>\r\n\r\n        )\r\n    }\r\n}","import { Component } from 'react';\r\nimport { utilService } from '../../../services/util.service';\r\nimport { userService } from '../../../services/user.service';\r\nimport MemberAvatar from '../../shared/MemberAvatar';\r\n\r\n\r\n\r\n\r\nexport class TaskComment extends Component {\r\n    state = {\r\n        comment: {\r\n            txt: ''\r\n        },\r\n        toggleUpdate: false\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    toggleUpdate = () => {\r\n        this.setState({ toggleUpdate: !this.state.toggleUpdate })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const name = target.name;\r\n        const value = target.value;\r\n        this.setState(prevState => {\r\n            return {\r\n                comment: {\r\n                    ...prevState.comment,\r\n                    [name]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    saveComment = () => {\r\n        const { txt } = this.state.comment;\r\n        if (!txt) return;\r\n        const comment = this.addComment();\r\n        const { task, updateTask } = this.props;\r\n        const newTask = { ...task };\r\n        if (newTask.comments) newTask.comments.unshift(comment);\r\n        else {\r\n            newTask.comments = [];\r\n            newTask.comments.unshift(comment);\r\n        }\r\n        updateTask(newTask, 'addea a new comment');\r\n        this.clearComment();\r\n    }\r\n\r\n    addComment = () => {\r\n        const { txt } = this.state.comment;\r\n        if (!txt) return;\r\n        const newComment = {\r\n            id: utilService.makeId(),\r\n            createdAt: Date.now(),\r\n            txt: this.state.comment.txt,\r\n            byMember: userService.getLoggedinUser() || utilService.getGuestUser()\r\n        }\r\n        return newComment;\r\n    }\r\n\r\n    clearComment = () => {\r\n        const comment = {\r\n            txt: ''\r\n        }\r\n        this.setState({ comment });\r\n    }\r\n\r\n    render() {\r\n        const { comment, toggleUpdate } = this.state;\r\n\r\n        return (\r\n            <section className=\"comment-container\">\r\n                <div className=\"taskDetails-coment\">\r\n                    <span className=\"avatar\"><MemberAvatar member={userService.getLoggedinUser() || utilService.getGuestUser()} /></span>\r\n                    <textarea className=\"text-area-comment\"\r\n                        value={comment.txt}\r\n                        name=\"txt\"\r\n                        placeholder=\"Write a comment...\"\r\n                        spellCheck=\"false\"\r\n                        onChange={this.handleChange}\r\n                        onFocus={this.toggleUpdate}\r\n                        onBlur={this.toggleUpdate}\r\n                    />\r\n                </div>\r\n                {toggleUpdate && <button className=\"primary-btn\" onClick={this.saveComment}>Save</button>}\r\n            </section>\r\n        )\r\n    }\r\n\r\n}","import { Component, Fragment } from 'react';\r\nimport { formatDistance } from 'date-fns';\r\nimport { utilService } from '../../../services/util.service.js';\r\nimport { SectionTitle } from '../../shared/SectionTitle.jsx';\r\nimport { BiCommentDots } from 'react-icons/bi';\r\nimport MemberAvatar from '../../shared/MemberAvatar.jsx';\r\nimport { TaskComment } from './TaskComment.jsx';\r\n\r\nexport class TaskDetailsActivity extends Component {\r\n    state = {\r\n        toggleActivity: false,\r\n        activities: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { board } = this.props;\r\n        const { id } = this.props.task;\r\n        if (board.activities.length <= 0) return;\r\n        console.log(board.activities)\r\n        const activities = board.activities.filter(activity => {\r\n            if (!activity.task) return;\r\n            if (activity.task) {\r\n                return activity.task.id === id;\r\n            }\r\n        })\r\n        this.setState({ activities })\r\n    }\r\n\r\n    onToggleActivity = () => {\r\n        this.setState({ toggleActivity: !this.state.toggleActivity })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name;\r\n        const value = target.value;\r\n        this.setState(prevState => {\r\n            return {\r\n                comment: {\r\n                    ...prevState.comment,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { toggleActivity, activities } = this.state;\r\n        const { task } = this.props;\r\n        let comments;\r\n        if (task.comments) comments = true;\r\n        else comments = false;\r\n        return (\r\n\r\n            <div className=\"taskActivity-container\" >\r\n                <div className=\"activity-header\">\r\n                    <SectionTitle className=\"detailsIcon\" Icon={BiCommentDots}>Activity</SectionTitle>\r\n                    <button className=\"secondary-btn\" onClick={this.onToggleActivity}>{toggleActivity ? 'Hide details' : 'Show details'}</button>\r\n                </div>\r\n\r\n                <TaskComment task={this.props.task} updateTask={this.props.updateTask} />\r\n                {comments &&\r\n                    task.comments.map((comment, idx) => {\r\n                        return <div key={comment.id} className=\"activity\">\r\n                            <span className=\"avatar\"><MemberAvatar member={comment.byMember} /></span>\r\n                            <div className=\"activity-description\">\r\n                                <p><span>{comment.byMember.fullname}</span> {formatDistance(comment.createdAt, Date.now())} ago </p>\r\n                                <p className=\"comment-txt\">{comment.txt}</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    })\r\n                }\r\n                {toggleActivity && <Fragment>\r\n                    {activities.map(activity => {\r\n                        return <div key={activity.id}>\r\n                            <div className=\"activity\">\r\n                                <span className=\"avatar\"><MemberAvatar member={activity.byMember} /></span>\r\n                                <div className=\"activity-description\">\r\n                                    <p ><span>{activity.byMember.fullname}</span> {activity.txt} to {activity.task.title}</p>\r\n                                    <p className=\"date\">{formatDistance(activity.createdAt, Date.now())} ago</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </Fragment>\r\n                }\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import { Component } from 'react';\r\nimport { BsTextLeft } from 'react-icons/bs';\r\nimport { CgClose } from 'react-icons/cg';\r\nimport { SectionTitle } from '../../shared/SectionTitle';\r\n\r\n\r\n\r\nexport class TaskDetailsDescription extends Component {\r\n    state = {\r\n        description: '',\r\n        toggleUpdate: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const description = this.props.task.description;\r\n        this.setState({ description });\r\n    }\r\n\r\n    toggleUpdate = () => {\r\n        this.setState({ toggleUpdate: !this.state.toggleUpdate })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        var description = { ...this.state }\r\n        description = target.value;\r\n        this.setState({ description })\r\n    }\r\n\r\n    updateTaskDescription = () => {\r\n        const { description } = this.state;\r\n        const newTask = { ...this.props.task, description }\r\n        this.props.updateTask(newTask, `edited description`);\r\n        this.toggleUpdate();\r\n    }\r\n\r\n    render() {\r\n        const { description, toggleUpdate } = this.state;\r\n        return (\r\n            <section className=\"taskDetails-description\">\r\n                 <SectionTitle className=\"detailsIcon\" Icon={BsTextLeft}>Description</SectionTitle>\r\n                {(description)\r\n                    ? <textarea className=\"text-area-description\" value={description} name=\"description\" spellCheck=\"false\" onChange={this.handleChange} onFocus={this.toggleUpdate} />\r\n                    : <textarea className=\"text-area-description\" value={description} name=\"description\" placeholder=\"Add a more detailed description...\" spellCheck=\"false\" onChange={this.handleChange} rows=\"2\"\r\n                        onBlur={this.updateTaskDescription} onFocus={this.toggleUpdate}\r\n                    />\r\n                }\r\n                {toggleUpdate &&\r\n                    <div className=\"yes-no-btns\">\r\n                        <button className=\"primary-btn\" onClick={this.updateTaskDescription}>Save</button>\r\n                        <CgClose className=\"cancel-btn\" onClick={this.toggleUpdate}/> \r\n                    </div>}\r\n            \r\n            </section>\r\n        )\r\n    }\r\n\r\n}","import { Component, Fragment } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { CgClose } from 'react-icons/cg';\r\nimport { Loading } from \"../../shared/Loading\";\r\n\r\n\r\nexport class ChecklistTodoPreview extends Component {\r\n    state = {\r\n        title: '',\r\n        isTodoClick: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ title: this.props.todo.title })\r\n    }\r\n\r\n    onUpdateTodo = () => {\r\n        const { title } = this.state\r\n        const { todo } = this.props\r\n        this.props.updateTodo({ ...todo, title })\r\n        this.toggleTodoClick()\r\n    }\r\n\r\n    toggleIsDone = ({ target }) => {\r\n        const { todo } = this.props\r\n        this.props.updateTodo({ ...todo, isDone: target.checked })\r\n    }\r\n\r\n    toggleTodoClick = () => {\r\n        this.setState({ isTodoClick: !this.state.isTodoClick })\r\n    }\r\n\r\n    // onEnter = (ev) => {\r\n    //     ev.preventDefault();\r\n    //     if (ev.key === \"Enter\" && ev.shiftKey === false) {\r\n    //         this.onUpdateTodo()\r\n    //     } \r\n    //     else return\r\n    // }\r\n\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name;\r\n        const value = target.value;\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.todo) return <Loading />\r\n        const { removeTodo } = this.props\r\n        const { isDone, id } = this.props.todo\r\n        const { title, isTodoClick } = this.state\r\n        return (\r\n\r\n            <li className=\"checklist-todo-container\">\r\n\r\n                <input id=\"myCheck\" type=\"checkbox\" onChange={this.toggleIsDone} checked={isDone} value={isDone} />\r\n\r\n                <div style={isDone ? { textDecoration: 'line-through' } : {}}>\r\n\r\n                    {!isTodoClick && <h6 onClick={this.toggleTodoClick} className=\"checklist-todo\">{title}</h6>}\r\n\r\n                    {isTodoClick && <div className=\"todo-edit\">\r\n                        <input className=\"todo-edit-input\" type=\"text\" value={title} name=\"title\"\r\n                            onBlur={this.onUpdateTodo}\r\n                            onChange={this.handleChange}\r\n                            autoFocus={true}\r\n                            spellCheck=\"false\"\r\n                        // onKeyDown={this.onEnter} \r\n                        ></input>\r\n                        <div className=\"yes-no-btns\">\r\n                            <button className=\"primary-btn\" onClick={this.onUpdateTodo}>Save</button>\r\n                            <CgClose className=\"cancel-btn\" onClick={this.toggleTodoClick} />\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n                <button className=\"secondary-btn\" onClick={() => removeTodo(id)}>{<FontAwesomeIcon icon={faTrash} />}</button>\r\n            </li>\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport { utilService } from '../../../services/util.service';\r\nimport { CgClose } from 'react-icons/cg';\r\n\r\n\r\n\r\nexport class CheckListAddTodo extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    // onEnter = (ev) => {\r\n    //     if (ev.key === \"Enter\" && ev.shiftKey === false) {\r\n    //         ev.preventDefault()\r\n    //         this.onAddTodo()\r\n    //     }\r\n    // }\r\n\r\n    onAddTodo = () => {\r\n        const { title } = this.state\r\n        if (!title) return\r\n        const todo = this.createNewTodo(title)\r\n        this.props.addNewTodo(todo)\r\n    }\r\n\r\n    createNewTodo = (title) => {\r\n        const todo = {\r\n            id: utilService.makeId(),\r\n            title,\r\n            isDone: false\r\n        }\r\n        return todo\r\n    }\r\n\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name;\r\n        const value = target.value;\r\n        this.setState({\r\n            [field]: value\r\n        }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { title } = this.state\r\n        return (\r\n            <div className=\"checklist-add-todo-container\">\r\n                <input className=\"add-item\" type=\"text\" value={title} name=\"title\"\r\n                    onBlur={this.onAddTodo}\r\n                    onChange={this.handleChange}\r\n                    autoFocus={true}\r\n                    spellCheck=\"false\"\r\n                    placeholder=\"Add an item\"\r\n                // onKeyDown={this.onEnter} \r\n                ></input>\r\n                <div className=\"yes-no-btns\">\r\n                    <button className=\"primary-btn\" onClick={this.onAddTodo}>Add</button>\r\n                    <CgClose className=\"cancel-btn\" onClick={this.props.toggleAddTodo} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import { Component } from \"react\";\r\n\r\n\r\n\r\nexport class ChecklistProgressBar extends Component {\r\n\r\n\r\n    getCompletedRatio = (todos = []) => {\r\n        const todoDone = todos.filter(todo => todo.isDone)\r\n        const completeRatio = Math.floor((todoDone.length / todos.length) * 100)\r\n        if (!completeRatio) return 0\r\n        return completeRatio\r\n    }\r\n\r\n    render() {\r\n        // const { completed } = this.state\r\n        const { todos } = this.props\r\n        const completed = { width: `${this.getCompletedRatio(todos)}%` }\r\n        return (\r\n            <section className=\"checklist-progress-bar-container\">\r\n                <h4>{completed.width}</h4>\r\n                <div className=\"checklist-progress-bar-main\">\r\n                    <div className=\"checklist-progress-bar-secondery\" style={completed}>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport { ChecklistTodoPreview } from './ChecklistTodoPreview'\r\nimport { CheckListAddTodo } from './ChecklistAddTodo'\r\nimport { ChecklistProgressBar } from './ChecklistProgressBar'\r\nimport { BsCheckBox } from 'react-icons/bs';\r\n\r\n\r\n\r\nexport class ChecklistPreview extends Component {\r\n    state = {\r\n        isAddTodo: false,\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ title: this.props.checklist.title })\r\n    }\r\n\r\n    updateChecklistTitle = (/* title */) => {\r\n        const { checklist, task } = this.props;\r\n        const { title } = this.state;\r\n        const idx = this.findChecklistIdx()\r\n        const newChecklist = { ...checklist, title }\r\n        const updatedTask = { ...task }\r\n        updatedTask.checklists.splice(idx, 1, newChecklist)\r\n        console.log(updatedTask);\r\n        this.props.updateTask(updatedTask, `edited ${checklist.title}`)\r\n    }\r\n\r\n    removeChecklist = () => {\r\n        const { task } = this.props\r\n        const idx = this.findChecklistIdx()\r\n        task.checklists.splice(idx, 1)\r\n        this.props.updateTask(task, `deleted checklist `)\r\n    }\r\n\r\n    findChecklistIdx = () => {\r\n        const { task, checklist } = this.props\r\n        const { id } = checklist\r\n        return task.checklists.findIndex(checklist => checklist.id === id)\r\n    }\r\n\r\n\r\n    // --- TODOS FUNCTIONS --- \\\\\r\n    removeTodo = (todoId) => {\r\n        const { task } = this.props\r\n        const idx = this.findChecklistIdx()\r\n        const newTodos = task.checklists[idx].todos.filter(todo => todo.id !== todoId)\r\n        task.checklists[idx].todos = newTodos\r\n        this.props.updateTask(task, `deleted checklist `)\r\n    }\r\n\r\n    updateTodo = (todo) => {\r\n        const { task } = this.props\r\n        const listIdx = this.findChecklistIdx()\r\n        const todoIdx = task.checklists[listIdx].todos.findIndex(currTodo => currTodo.id === todo.id)\r\n        task.checklists[listIdx].todos.splice(todoIdx, 1, todo)\r\n        this.props.updateTask(task, `edited checklist `)\r\n    }\r\n\r\n    addNewTodo = (todo = null) => {\r\n        const { task } = this.props\r\n        if (todo) {\r\n            const Idx = this.findChecklistIdx()\r\n            if (task.checklists[Idx].todos) task.checklists[Idx].todos.push(todo)\r\n            else task.checklists[Idx].todos = [todo]\r\n            this.props.updateTask(task, `added ${todo.title}'s checklist`)\r\n        }\r\n        this.toggleAddTodo()\r\n    }\r\n\r\n    toggleAddTodo = () => {\r\n        this.setState({ isAddTodo: !this.state.isAddTodo })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name;\r\n        const value = target.value;\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.checklist) return <div>Loading...</div>\r\n        const { checklist } = this.props\r\n        const { isAddTodo, title } = this.state\r\n        const { todos } = checklist\r\n        return (\r\n            <ul className=\"task-details-checklist-container\">\r\n                <header className=\"checklist-header\">\r\n                    <div className=\"checklist-title-container\">\r\n                        <div className=\"checklist-title\">\r\n                            <BsCheckBox className=\"detailsIcon\" />\r\n                            <input className=\"checklist-title-input\" type=\"text\" name=\"title\" value={title}\r\n                                onChange={this.handleChange}\r\n                                onBlur={this.updateChecklistTitle}\r\n                                value={title}\r\n                                spellCheck=\"false\"\r\n                            />\r\n                        </div>\r\n                        <button className=\"secondary-btn\" onClick={this.removeChecklist}>Delete</button>\r\n                    </div>\r\n                </header>\r\n                <ChecklistProgressBar todos={todos}>\r\n                </ChecklistProgressBar>\r\n                <div className=\"checklist-todos-container\">\r\n                    {todos && todos.map(todo =>\r\n                        <ChecklistTodoPreview\r\n                            key={todo.id}\r\n                            todo={todo}\r\n                            updateTodo={this.updateTodo}\r\n                            removeTodo={this.removeTodo}\r\n                        />)}\r\n                    {!isAddTodo && <button className=\"checklist-todo-add-btn secondary-btn\" onClick={this.toggleAddTodo}>Add an item</button>}\r\n                    {isAddTodo && <CheckListAddTodo\r\n                        toggleAddTodo={this.toggleAddTodo}\r\n                        addNewTodo={this.addNewTodo} />}\r\n                </div>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}","import { ChecklistPreview } from './ChecklistPreview';\r\n\r\nexport function ChecklistList({ task, checklists, updateTask }) {\r\n    return (\r\n        <div className=\"checklists-container\">\r\n            {checklists.map(checklist =>\r\n                <ChecklistPreview\r\n                    key={checklist.id}\r\n                    task={task}\r\n                    checklist={checklist}\r\n                    updateTask={updateTask} />\r\n            )}\r\n        </div>\r\n\r\n    )\r\n}","import { Component } from \"react\";\r\nimport { utilService } from '../../../services/util.service';\r\nimport { ModalHeader } from \"../../shared/ModalHeader\";\r\n\r\nexport class ChecklistAdd extends Component {\r\n    state = {\r\n        title: '',\r\n    }\r\n\r\n\r\n    onAddChecklist = () => {\r\n        const { task, updateTask } = this.props\r\n        const { title } = this.state\r\n        if (!title) return\r\n        const newChecklist = this.createNewChecklist(title)\r\n        if (task.checklists) task.checklists.push(newChecklist)\r\n        else task.checklists = [newChecklist]\r\n        updateTask(task, `added ${title}`)\r\n        this.props.toggleAddCheckList()\r\n    }\r\n\r\n    onKeyDown = (ev) => {\r\n        if (ev.key === \"Enter\" && ev.shiftKey === false) {\r\n            ev.preventDefault();\r\n            this.onAddChecklist()\r\n        }\r\n    }\r\n\r\n\r\n    createNewChecklist = (title) => {\r\n        const checklist = {\r\n            id: utilService.makeId(),\r\n            title,\r\n            todos: []\r\n        }\r\n        return checklist\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name;\r\n        const value = target.value;\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { toggleAddCheckList, modalPos } = this.props\r\n        return (\r\n            <div className=\"checklist-new-container\" style={{ ...modalPos }}>\r\n                <ModalHeader title='Add checklist' closeModal={toggleAddCheckList} />\r\n                <div className=\"\">\r\n                    <input name=\"title\" label=\"Title\" placeholder=\"Checklist Title...\"\r\n                        onChange={this.handleChange}\r\n                        onKeyDown={this.onKeyDown}\r\n                        onBlur={this.onAddChecklist}\r\n                        spellCheck=\"false\">\r\n                    </input>\r\n                    <button className=\"primary-btn\" onClick={this.onAddChecklist}>Add</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport { Component } from 'react';\r\nimport React from 'react';\r\nimport { ModalHeader } from '../../shared/ModalHeader';\r\n\r\n\r\nexport class TaskDueDate extends Component {\r\n  state = {\r\n    dueDate: ''\r\n  }\r\n\r\n  handleDateChange = ({ target }) => {\r\n    const { valueAsNumber } = target;\r\n    this.setState({ dueDate: valueAsNumber })\r\n  }\r\n\r\n  onSaveDueDate = () => {\r\n    const { task, updateTask } = this.props;\r\n    const updatedTask = { ...task };\r\n    updatedTask.dueDate = this.state.dueDate;\r\n    updateTask(updatedTask, `edited due date`);\r\n  }\r\n\r\n\r\n  render() {\r\n    const { modalPos, toggleDueDate } = this.props;\r\n    return (\r\n      <div className=\"TaskDueDate-modal\" style={{ ...modalPos }}>\r\n        <ModalHeader title='Due date' closeModal={toggleDueDate} />\r\n        <div className=\"dueDate\">\r\n          <input\r\n            name=\"dueDate\"\r\n            type=\"date\"\r\n            value={this.props.task.dueDate}\r\n            onChange={this.handleDateChange} />\r\n          <button className=\"primary-btn\" onClick={this.onSaveDueDate}>Save</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export const cloudinaryService = {\r\n  uploadImg\r\n}\r\nfunction uploadImg(ev) {\r\n  const CLOUD_NAME = 'dcwibf9o5'\r\n  const PRESET_NAME = 'vt0iqgff'\r\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', ev.target.files[0])\r\n  formData.append('upload_preset', PRESET_NAME);\r\n\r\n  return fetch(UPLOAD_URL, {\r\n    method: 'POST',\r\n    body: formData\r\n  })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res)\r\n\r\n      return res\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n","\r\nimport React from 'react';\r\nimport { cloudinaryService } from '../../../services/cloudinary.service';\r\nimport { ModalHeader } from '../../shared/ModalHeader';\r\n\r\nexport class TaskImg extends React.Component {\r\n    state = {\r\n        imgUrl: '',\r\n    }\r\n\r\n    onUpload = async (ev) => {\r\n        ev.preventDefault()\r\n        const imgUrl = await cloudinaryService.uploadImg(ev)\r\n        this.setState({ imgUrl })\r\n        this.props.updateImg(this.state.imgUrl);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { modalPos, toggleImgUpload } = this.props;\r\n        return (\r\n            <div className=\"TaskImg-modal\" style={{ ...modalPos }}>\r\n                <ModalHeader title='Upload image' closeModal={toggleImgUpload} />\r\n                <label\r\n                    htmlFor=\"upload\"\r\n                    className=\"primary-btn\"\r\n                >\r\n                    upload\r\n                </label>\r\n                <input\r\n                    hidden\r\n                    type=\"file\"\r\n                    id=\"upload\"\r\n                    onChange={(ev) => this.onUpload(ev)}\r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { TaskDetailsHeader } from './TaskDetailsHeader';\r\nimport { CheckBox } from './CheckBox';\r\nimport { TaskDetailsActivity } from './TaskDetailsActivity';\r\nimport { TaskDetailsDescription } from './TaskDetailsDescription';\r\nimport { ChecklistList } from '../TaskCheckList/ChecklistList';\r\nimport { ChecklistAdd } from '../TaskCheckList/ChecklistAdd';\r\nimport { updateBoard, loadBoard } from '../../../store/actions/board.actions';\r\nimport { TaskDueDate } from './TaskDueDate';\r\nimport { TaskImg } from './TaskImg';\r\nimport { TaskMembers } from './TaskMembers';\r\nimport { TaskLabel } from './TaskLabel';\r\nimport { BiCreditCard, BiTimeFive } from 'react-icons/bi';\r\nimport { MdLabelOutline, MdContentCopy } from 'react-icons/md';\r\nimport { BsPerson, BsCheckBox, BsArrowRightShort, BsTrash, BsImage } from 'react-icons/bs';\r\nimport { TaskLabelPreview } from './TaskLabelPreview';\r\nimport { Loading } from '../../shared/Loading';\r\nimport { TaskMembersPreview } from './TaskMembersPreview';\r\nimport { CgClose } from 'react-icons/cg';\r\nimport { SectionTitle } from '../../shared/SectionTitle';\r\nimport { utilService } from '../../../services/util.service';\r\n\r\nlet modalPos;\r\n\r\nclass _TaskDetails extends Component {\r\n    state = {\r\n        task: null,\r\n        group: null,\r\n        isDate: false,\r\n        toggleTaskLabel: false,\r\n        toggleImgUpload: false,\r\n        toggleAddCheckList: false,\r\n        toggleMembers: false,\r\n        toggleDueDate: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadTask();\r\n    }\r\n\r\n    loadTask = () => {\r\n        const { boardId, groupId, taskId } = this.props.match.params;\r\n        const { board } = this.props;\r\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n        const task = board.groups[groupIdx].tasks.find(task => task.id === taskId);\r\n        this.setState({ task, group: board.groups[groupIdx] })\r\n    }\r\n\r\n    async updateBoard(board, activity) {\r\n        try {\r\n            await this.props.updateBoard(board, activity);\r\n            await this.props.loadBoard(board._id);\r\n        } catch (err) {\r\n            console.log('On Task details, Update Board:', err)\r\n        }\r\n    }\r\n\r\n    updateTask = (task, txt = null) => {\r\n        this.setState({ task })\r\n        const taskId = task.id;\r\n        const { id } = this.state.group;\r\n        const { board, loggedInUser } = this.props;\r\n        const groupIdx = board.groups.findIndex(group => group.id === id)\r\n        const taskIdx = board.groups[groupIdx].tasks.findIndex(task => task.id === taskId)\r\n        const updatedBoard = { ...board };\r\n        const user = loggedInUser ? loggedInUser : utilService.getGuestUser();\r\n        // updatedBoard.activities.unshift(utilService.addActivity(user, activity, this.state.task, null, null, null));\r\n        const activity = utilService.addActivity(user, txt, this.state.task, null, null, null);\r\n        updatedBoard.groups[groupIdx].tasks.splice(taskIdx, 1, task)\r\n        this.setState({ task: { ...task } })\r\n        this.updateBoard(updatedBoard, activity);\r\n    }\r\n\r\n    removeTask = () => {\r\n        const taskId = this.state.task.id;\r\n        const { id } = this.state.group;\r\n        const { board, loggedInUser } = this.props;\r\n        const boardId = board._Id;\r\n        const groupIdx = board.groups.findIndex(group => group.id === id);\r\n        const taskIdx = board.groups[groupIdx].tasks.findIndex(task => task.id === taskId);\r\n        const updatedBoard = { ...board };\r\n        const user = loggedInUser ? loggedInUser : utilService.getGuestUser();\r\n        // updatedBoard.activities.unshift(utilService.addActivity(user, `deleted task ${this.state.task.title}`, null, this.state.group, null, null));       \r\n        updatedBoard.groups[groupIdx].tasks.splice(taskIdx, 1);\r\n        const activity = utilService.addActivity(user, `deleted task ${this.state.task.title}`, null, this.state.group, null, null)\r\n        this.updateBoard(updatedBoard, activity);\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n\r\n    copyTask = () => {\r\n        const { board, loggedInUser } = this.props;\r\n        const { task, group } = this.state;\r\n        const copiedTask = { ...task }\r\n        copiedTask.id = utilService.makeId()\r\n        const groupIdx = board.groups.findIndex(currGroup => currGroup.id === group.id);\r\n        const updatedGroup = { ...group };\r\n        updatedGroup.tasks.push(copiedTask);\r\n        const updatedBoard = { ...board };\r\n        const user = loggedInUser ? loggedInUser : utilService.getGuestUser();\r\n        const activity = utilService.addActivity(user, `copied task ${this.state.task.title}`, null, this.state.group, null, null)\r\n        updatedBoard.groups.splice(groupIdx, 1, updatedGroup)\r\n        this.updateBoard(updatedBoard, activity);\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { value, name, checked, type } = target\r\n        let computedValue = type === 'checkbox' ? checked : value\r\n        this.setState(prevState => (\r\n            { ...prevState, task: { ...prevState.task, [name]: computedValue } }\r\n        ), () => {\r\n            this.updateTask(this.state.task)\r\n        })\r\n    }\r\n\r\n    updateImg = (imgUrl) => {\r\n        console.log(imgUrl);\r\n        this.setState(prevState => (\r\n            { ...prevState, task: { ...prevState.task, img: imgUrl } }\r\n        ), () => {\r\n            this.updateTask(this.state.task, 'added an image')\r\n        })\r\n    }\r\n\r\n    deletImg = () => {\r\n        const taskId = this.state.task.id;\r\n        const { id } = this.state.group;\r\n        const { board } = this.props;\r\n        const groupIdx = board.groups.findIndex(group => group.id === id);\r\n        const taskIdx = board.groups[groupIdx].tasks.findIndex(task => task.id === taskId);\r\n        const updatedBoard = { ...board };\r\n        updatedBoard.groups[groupIdx].tasks[taskIdx].img = '';\r\n        this.setState(prevState => (\r\n            { ...prevState, task: { ...prevState.task, img: '' } }\r\n        ), () => {\r\n            this.updateTask(this.state.task, `removed image`)\r\n        })\r\n        this.updateBoard(updatedBoard, 'removed image');\r\n    }\r\n\r\n    taskDetailsRef = React.createRef();\r\n\r\n    modalPos = (ev) => {\r\n        let { top, left } = this.taskDetailsRef.current.getBoundingClientRect();\r\n        top = parseFloat(top);\r\n        left = parseFloat(left) + 100;\r\n        const { clientX, clientY } = ev;\r\n        modalPos = { left: clientX - left + 'px', top: (clientY - top) + 'px' };\r\n    }\r\n\r\n    toggle = (ev, key) => {\r\n        const computed = {\r\n            key\r\n        }\r\n        computed.key = 'toggle' + utilService.capitalize(key);\r\n        console.log(computed.key);\r\n        !this.state[computed.key] && this.modalPos(ev);\r\n        this.setState({ [computed.key]: !this.state[computed.key] });\r\n    }\r\n\r\n    render() {\r\n        const { board } = this.props;\r\n        const { task, group, toggleTaskLabel, toggleAddCheckList, toggleMembers, toggleImgUpload, toggleDueDate } = this.state;\r\n        if (!task) return <Loading />\r\n        const { checklists, labelIds, comments, members, img, dueDate, isDone } = this.state.task;\r\n        const isImg = task.img?.url;\r\n        let dueDateToShow = new Intl.DateTimeFormat('he-IL', { day: '2-digit', month: '2-digit', }).format(dueDate)\r\n        return (\r\n            <section className=\"TaskDetails-modal\">\r\n\r\n                <Link to={`/board/${board._id}/`}>\r\n                    <div className=\"main-screen\">\r\n                    </div>\r\n                </Link>\r\n\r\n                <section ref={this.taskDetailsRef} className=\"taskDetails-container\" >\r\n\r\n                    <div className=\"taskDetails-header\">\r\n                        <TaskDetailsHeader task={task} group={group} updateTask={this.updateTask} />\r\n                        <Link to={`/board/${board._id}/`}><CgClose className=\"closeIcon\" /></Link>\r\n                    </div>\r\n\r\n                    <div className=\"taskDetails-body\">\r\n\r\n                        <div className=\"task-details\">\r\n\r\n                            <section className=\"taskDetails-task-status\">\r\n                                {members && <div className=\"task-members-preview\">\r\n                                    {(members.length) > 0 ? <p>MEMBERS</p> : ''}\r\n                                    < TaskMembersPreview members={members} />\r\n                                </div>}\r\n\r\n                                {labelIds && <div className=\"taskDetails-labels\">\r\n                                    {(labelIds.length) > 0 ? <p>LABELS</p> : ''}\r\n                                    <div className=\"labels-container\">\r\n                                        < TaskLabelPreview labelIds={labelIds} isOpen={true} />\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {dueDate && <div className=\"taskDetails-DueDate\">\r\n                                    <p>DUE DATE</p>\r\n                                    <div className=\"date-dueDate\">\r\n                                        <CheckBox task={task} handleChange={this.handleChange} isChecked={task.isDone} updateTask={this.updateTask} />\r\n                                        <p>{dueDateToShow}</p>\r\n                                        {isDone && <p className=\"complete\">COMPLETE</p>}\r\n                                    </div>\r\n                                </div>}\r\n                            </section>\r\n\r\n                            <TaskDetailsDescription task={task} updateTask={this.updateTask} />\r\n\r\n                            {isImg && <div className=\"taskDetails-img\">\r\n                                <SectionTitle className=\"img-title\" Icon={BsImage}>Images</SectionTitle>\r\n                                <img className=\"uploaded-img\" src={img.url} alt=\"content\" />\r\n                                <button className=\"secondary-btn\" onClick={this.deletImg}>Delete</button>\r\n                            </div>\r\n                            }\r\n\r\n                            {checklists && <ChecklistList checklists={checklists} task={task} updateTask={this.updateTask} />}\r\n\r\n                            <TaskDetailsActivity task={task} board={board} updateTask={this.updateTask} />\r\n                        </div>\r\n\r\n                        {/* POPUPS BUTTONS */}\r\n                        <ul className=\"task-actions\">\r\n                            {/* ADD MEMBERS */}\r\n                            <li className=\"detail-act-btn\" onClick={ev => this.toggle(ev, 'members')}><BsPerson /><span className=\"txt\">Memebrs</span></li>\r\n                            {/* ADD LABELS */}\r\n                            <li className=\"detail-act-btn\" onClick={ev => this.toggle(ev, 'taskLabel')}><MdLabelOutline /><span className=\"txt\">Labels</span></li>\r\n                            {/* ADD DATES */}\r\n                            <li className=\"detail-act-btn\" onClick={ev => this.toggle(ev, 'dueDate')}><BiTimeFive /><span className=\"txt\">Due Date</span></li>\r\n                            {/* ADD CHECLIST */}\r\n                            <li className=\"detail-act-btn\" onClick={ev => this.toggle(ev, 'addCheckList')}><BsCheckBox /><span className=\"txt\">Checklist</span></li>\r\n                            {/* ADD IMAGE */}\r\n                            <li className=\"detail-act-btn\" onClick={ev => this.toggle(ev, 'imgUpload')}><BsImage /><span className=\"txt\">Image</span></li>\r\n                            {/* MOVE TASK */}\r\n                            <li className=\"detail-act-btn\"><BsArrowRightShort /><span className=\"txt\">Move</span></li>\r\n                            {/* COPY TASK */}\r\n                            <li className=\"detail-act-btn\" onClick={this.copyTask}><MdContentCopy /><span className=\"txt\">Copy</span></li>\r\n                            {/* DELETE TASK */}\r\n                            <li className=\"detail-act-btn\" onClick={this.removeTask}><BsTrash /><span className=\"txt\">Delete</span></li>\r\n                        </ul>\r\n\r\n                        {/* POPUPS */}\r\n                        {toggleMembers && <TaskMembers modalPos={modalPos} members={board.members} task={task} toggleMembers={ev => this.toggle(ev, 'members')} updateTask={this.updateTask} />}\r\n                        {toggleTaskLabel && <TaskLabel modalPos={modalPos} task={task} updateTask={this.updateTask} toggleTaskLabel={ev => this.toggle(ev, 'taskLabel')} />}\r\n                        {toggleAddCheckList && <ChecklistAdd modalPos={modalPos} task={task} toggleAddCheckList={ev => this.toggle(ev, 'addCheckList')} updateTask={this.updateTask} />}\r\n                        {toggleImgUpload && <TaskImg modalPos={modalPos} updateImg={this.updateImg} toggleImgUpload={ev => this.toggle(ev, 'imgUpload')} />}\r\n                        {toggleDueDate && <TaskDueDate modalPos={modalPos} task={task} updateTask={this.updateTask} toggleDueDate={ev => this.toggle(ev, 'dueDate')} />}\r\n                    </div>\r\n                </section>\r\n            </section >\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.board,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    loadBoard\r\n}\r\n\r\nexport const TaskDetails = connect(mapStateToProps, mapDispatchToProps)(_TaskDetails)\r\n\r\n\r\n\r\n","import { Component } from \"react\";\r\nimport {  faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport MemberAvatar from '../../shared/MemberAvatar'\r\nimport { ModalHeader } from \"../../shared/ModalHeader\";\r\n\r\n\r\nexport class TaskMembers extends Component {\r\n    state = {\r\n        taskMembers: [],\r\n        notTaskMembers: []\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            taskMembers: this.loadTaskMembers(),\r\n            notTaskMembers: this.loadNotTaskMembers()\r\n        })\r\n    }\r\n\r\n    loadTaskMembers() {\r\n        const { task } = this.props\r\n        return task.members\r\n    }\r\n\r\n    loadNotTaskMembers() {\r\n        const { members, task } = this.props\r\n        if (!task.members) return members\r\n        const notTaskMembers = members.filter(member => {\r\n            return !task.members.find(currMember => currMember._id === member._id)\r\n        })\r\n        return notTaskMembers\r\n    }\r\n\r\n\r\n    onClickMember = (member) => {\r\n        const { task } = this.props\r\n        const { taskMembers } = this.state\r\n        if (!taskMembers) task.members = [member]\r\n        else {\r\n            const isTaskMember = taskMembers.find(taskMember => taskMember._id === member._id)\r\n            !isTaskMember ? task.members.push(member) : task.members = task.members.filter(currMember => currMember._id !== member._id)\r\n            this.setState({\r\n                taskMembers: this.loadTaskMembers(),\r\n                notTaskMembers: this.loadNotTaskMembers()\r\n            }, console.log('1', this.state))\r\n        }\r\n        this.props.updateTask(task, `edited members`)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { toggleMembers,  modalPos={modalPos} } = this.props\r\n        const { taskMembers, notTaskMembers } = this.state\r\n        return (\r\n            <div className=\"task-add-members-container\" style={{ ...modalPos }}>\r\n                <ModalHeader title='Members' closeModal={toggleMembers} />\r\n                <ul>\r\n                    {taskMembers && taskMembers.map(member =>\r\n                        <li key={member._id} className=\"task-add-member-container\" onClick={() => this.onClickMember(member)}>\r\n                            <MemberAvatar member={member} />\r\n                            <h4>{member.fullname}</h4>\r\n                            <h4>({member.username})</h4>\r\n                            {<FontAwesomeIcon icon={faCheck} />}\r\n                        </li>)}\r\n\r\n                    {!notTaskMembers && <div>No available members to add</div>}\r\n                    {notTaskMembers && notTaskMembers.map(member =>\r\n                        <li key={member._id} className=\"task-add-member-container\" onClick={() => this.onClickMember(member)}>\r\n                            <MemberAvatar member={member} />\r\n                            <h4>{member.fullname}</h4>\r\n                            <h4>({member.username})</h4>\r\n                        </li>)}\r\n\r\n                </ul>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { ModalHeader } from '../../shared/ModalHeader.jsx';\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport { BiCheck } from 'react-icons/bi';\r\n\r\nexport class TaskLabel extends Component {\r\n    state = {\r\n        labels: [\r\n            { id: 'l101', color: \"#61bd4f\", title: '', isPicked: false },\r\n            { id: 'l102', color: \"#f2d602\", title: '', isPicked: false },\r\n            { id: 'l103', color: \"#f99f1b\", title: '', isPicked: false },\r\n            { id: 'l104', color: \"#eb5a46\", title: '', isPicked: false },\r\n            { id: 'l105', color: \"#c377e0\", title: '', isPicked: false },\r\n            { id: 'l106', color: \"#1f79bf\", title: '', isPicked: false },\r\n        ],\r\n        labelsRef: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { labelIds } = this.props.task;\r\n        if (!labelIds || labelIds.length <= 0) return;\r\n        const labels = this.state.labels.map((label, idx) => {\r\n            let currLabel = {\r\n                id: label.id,\r\n                color: label.color,\r\n                title: labelIds[idx].title,\r\n                isPicked: labelIds[idx].isPicked,\r\n            }\r\n            return currLabel;\r\n        })\r\n        this.setState({ labels });\r\n        this.setLabelsRef();\r\n    }\r\n\r\n    handleChange = (ev, labelId, idx) => {\r\n        ev.preventDefault();\r\n        console.log(labelId, ev.target.value, idx);\r\n        const title = ev.target.value;\r\n        const newLabels = [...this.state.labels];\r\n        newLabels[idx].title = title;\r\n        this.setState({ labels: newLabels })\r\n    }\r\n\r\n    onPickLabel = (idx) => {\r\n        const newLabels = [...this.state.labels];\r\n        newLabels[idx].isPicked = !this.state.labels[idx].isPicked;\r\n        this.setState({ labels: newLabels })\r\n        this.updateLabel();\r\n    }\r\n\r\n    updateLabel = () => {\r\n        const { updateTask, task } = this.props;\r\n        const newTask = { ...task };\r\n        newTask.labelIds = this.state.labels;\r\n        updateTask(newTask, `edited labels`);\r\n    }\r\n\r\n    onUpdateLabel = () => {\r\n        this.updateLabel();\r\n        this.props.toggleTaskLabel();\r\n    }\r\n\r\n    setLabelsRef = () => {\r\n        const labelsRef = [];\r\n        this.state.labels.forEach(label => {\r\n            labelsRef.push(React.createRef())\r\n        })\r\n        this.setState({ labelsRef: labelsRef }, () => console.log(this.state))\r\n    }\r\n\r\n    setFocus = (ev, idx) => {\r\n        ev.stopPropagation();\r\n        const { labelsRef } = this.state;\r\n        labelsRef[idx].current.focus();\r\n    }\r\n\r\n    render() {\r\n        const { labels, labelsRef } = this.state;\r\n        const { toggleTaskLabel, modalPos } = this.props;\r\n        return (\r\n            <section className=\"TaskLabel-modal\" style={{ ...modalPos }}>\r\n                <ModalHeader title='Labels' closeModal={toggleTaskLabel} />\r\n                {labels.map((label, idx) => {\r\n                    return (\r\n                        <div className=\"label-container\" key={label.id}>\r\n                            <input\r\n                                style={{ backgroundColor: label.color }}\r\n                                value={label.title}\r\n                                spellCheck=\"false\"\r\n                                onClick={() => this.onPickLabel(idx)}\r\n                                onChange={(ev) => this.handleChange(ev, label.id, idx)}\r\n                                ref={labelsRef[idx]}\r\n                            >\r\n                            </input>\r\n                            <BsPencil title=\"edit label name\" onClick={(ev) => this.setFocus(ev, idx)} />\r\n                            {/* <BiCheck onClick={this.onUpdateLabel} /> */}\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { Component } from 'react';\r\nimport { Link, Switch, Route } from 'react-router-dom'\r\nimport { loadBoard, updateBoard, removeBoard } from '../store/actions/board.actions.js';\r\nimport { GroupList } from '../cmps/group/GroupList';\r\nimport { BoardHeader } from '../cmps/board/BoardHeader';\r\nimport { TaskDetails } from '../cmps/task/TaskDetails/TaskDetails';\r\nimport { Loading } from '../cmps/shared/Loading';\r\nimport { Fragment } from 'react';\r\nimport { socketService } from '../services/socket.service';\r\nimport { utilService } from '../services/util.service.js';\r\n\r\nclass _WePlanApp extends Component {\r\n    state = {\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadBoard();\r\n        socketService.setup();\r\n        socketService.on('board updated', boardId => {\r\n            if (boardId === this.props.match.params.boardId) {\r\n                this.loadBoard();\r\n            }\r\n        })\r\n    }\r\n\r\n    loadBoard = async () => {\r\n        const { boardId } = this.props.match.params;\r\n        try {\r\n            await this.props.loadBoard(boardId);\r\n        } catch (err) {\r\n            console.log('Load Board:', err)\r\n        }\r\n    }\r\n\r\n    updateBoard = async (board, activity) => {\r\n        try {\r\n            await this.props.updateBoard(board, activity);\r\n        } catch (err) {\r\n            console.log('Update Board:', err)\r\n        }\r\n    }\r\n\r\n    onUpdateBoard = (board, txt = null) => {\r\n        const { loggedInUser } = this.props;\r\n        const user = loggedInUser ? loggedInUser : utilService.getGuestUser();\r\n        /*  board.activities.unshift(utilService.addActivity(user, txt, null, null, null, 'this board')); */\r\n        const activity = utilService.addActivity(user, txt, null, null, null, 'this board');\r\n        this.props.updateBoard(board, activity);\r\n    }\r\n\r\n    onRemoveBoard = async (boardId) => {\r\n        try {\r\n            await this.props.removeBoard(boardId);\r\n            this.props.history.push('/board')\r\n        } catch (err) {\r\n            console.log('couldnt remove board', err)\r\n        }\r\n    }\r\n\r\n    updateGroup = (newGroup, txt = null) => {\r\n        const { board, loggedInUser } = this.props;\r\n        const groupIdx = board.groups.findIndex(group => group.id === newGroup.id);\r\n        const updatedBoard = { ...board };\r\n        const user = loggedInUser ? loggedInUser : utilService.getGuestUser();\r\n        /* updatedBoard.activities.unshift(utilService.addActivity(user, activity, null, newGroup, null, null));  */\r\n        const activity = utilService.addActivity(user, txt, null, newGroup, null, null);\r\n        updatedBoard.groups[groupIdx] = newGroup;\r\n        this.updateBoard(updatedBoard, activity);\r\n    }\r\n\r\n    removeGroup = (groupId) => {\r\n        const { board, loggedInUser } = this.props;\r\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n        const updatedBoard = { ...board };\r\n        const user = loggedInUser ? loggedInUser : utilService.getGuestUser();\r\n        const activity = utilService.addActivity(user, `deleted list`, null, null, board, null);\r\n        // updatedBoard.activities.unshift(utilService.addActivity(user, `deleted list`, null, null, board, null));\r\n        updatedBoard.groups.splice(groupIdx, 1)\r\n        this.updateBoard(updatedBoard, activity);\r\n    }\r\n\r\n    addGroup = (group) => {\r\n        console.log(group);\r\n        const { board, loggedInUser } = this.props;\r\n        const updatedBoard = { ...board };\r\n        const user = loggedInUser ? loggedInUser : utilService.getGuestUser();\r\n        // updatedBoard.activities.unshift(utilService.addActivity(user, `added ${group.title}`, null, null, board, null));\r\n        const activity = utilService.addActivity(user, `added ${group.title}`, null, null, board, null);\r\n        updatedBoard.groups.push(group);\r\n        console.log(updatedBoard);\r\n        this.updateBoard(updatedBoard, activity);\r\n    }\r\n\r\n    handleDragEnd = async (res) => {\r\n        console.log('in handleDragEnd')\r\n        const { source, destination, type } = res;\r\n        const { board, loggedInUser } = this.props;\r\n        const updatedBoard = { ...board };\r\n        if (!destination) return;\r\n        if (destination.droppableId === source.droppableId\r\n            &&\r\n            destination.index === source.index) return;\r\n        if (type === 'group') {\r\n            const newGroups = this._reorder(board.groups, source.index, destination.index);\r\n            updatedBoard.groups = newGroups;\r\n        } else if (type === 'task') {\r\n            if (destination.droppableId === source.droppableId) {\r\n                var groupIdx = board.groups.findIndex(group => group.id === source.droppableId)\r\n                const newTasks = this._reorder(board.groups[groupIdx].tasks, source.index, destination.index);\r\n                updatedBoard.groups[groupIdx].tasks = newTasks;\r\n            } else if (destination.droppableId !== source.droppableId) {\r\n                const sourceGroup = source.droppableId;\r\n                const destinationGroup = destination.droppableId;\r\n                //remove task from source group\r\n                const sourceGroupIdx = board.groups.findIndex(group => group.id === sourceGroup)\r\n                const sourceGroupItems = Array.from(board.groups[sourceGroupIdx].tasks)\r\n                const [transferedItem] = sourceGroupItems.splice(source.index, 1);\r\n                //add task to destination group\r\n                const destinationGroupIdx = board.groups.findIndex(group => group.id === destinationGroup);\r\n                const destinationGroupItems = Array.from(board.groups[destinationGroupIdx].tasks);\r\n                destinationGroupItems.splice(destination.index, 0, transferedItem);\r\n                //update groups in data\r\n                updatedBoard.groups[sourceGroupIdx].tasks = sourceGroupItems;\r\n                updatedBoard.groups[destinationGroupIdx].tasks = destinationGroupItems;\r\n            }\r\n        }\r\n        const user = loggedInUser ? loggedInUser : utilService.getGuestUser();\r\n        const activity = utilService.addActivity(user, `moved`, null, null, null, null);\r\n        await this.props.updateBoard(updatedBoard, activity);\r\n        this.loadBoard();\r\n    }\r\n\r\n    _reorder = (list, sourceIdx, destIdx) => {\r\n        const items = Array.from(list);\r\n        const [removedItem] = items.splice(sourceIdx, 1);\r\n        items.splice(destIdx, 0, removedItem);\r\n        return items;\r\n    }\r\n\r\n\r\n    render() {\r\n        const { board } = this.props;\r\n        if (!board) return <Loading />\r\n        const { title, groups, style, loggedInUser } = this.props.board;\r\n        const bg = style.img ? { backgroundImage: `url(${style.img})` } : { backgroundColor: style.bgc };\r\n        return (\r\n            <Fragment>\r\n                <section className=\"wePlanApp-main-content\" style={bg}>\r\n                    <BoardHeader board={board} onUpdateBoard={this.onUpdateBoard} onRemoveBoard={this.onRemoveBoard} />\r\n                    <Switch>\r\n                        <Route path='/board/:boardId/group/:groupId/task/:taskId' component={TaskDetails} />\r\n                    </Switch>\r\n                    <GroupList groups={groups} loggedInUser={loggedInUser} board={board} updateGroup={this.updateGroup} removeGroup={this.removeGroup} addGroup={this.addGroup} handleDragEnd={this.handleDragEnd} />\r\n                </section >\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.board,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    updateBoard,\r\n    removeBoard\r\n}\r\n\r\nexport const WePlanApp = connect(mapStateToProps, mapDispatchToProps)(_WePlanApp)","\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\n\r\nexport function BoardPreview({ board }) {\r\n    const { _id, title, style } = board;\r\n    const bg = style.img ? { backgroundImage: `url(${style.img})` } : { backgroundColor: style.bgc };\r\n\r\n    return (\r\n        <Link to={`/board/${_id}`}>\r\n            <div className=\"single-board-preview\" style={bg}>\r\n                <h4>{title}</h4>\r\n            </div>\r\n        </Link>\r\n\r\n    );\r\n\r\n}\r\n\r\n","import { Fragment } from 'react';\r\nimport { BoardPreview } from './BoardPreview.jsx';\r\n\r\nexport function BoardList({ boards }) {\r\n\r\n  return (\r\n    <Fragment>\r\n      {boards.map(board =>\r\n        <BoardPreview board={board} key={board._id} />\r\n      )}\r\n    </Fragment>\r\n\r\n  )\r\n}","import { connect } from 'react-redux';\r\nimport { Component } from 'react';\r\nimport { loadBoards, addBoard } from '../store/actions/board.actions.js';\r\nimport { SectionTitle } from '../cmps/shared/SectionTitle';\r\nimport { HiOutlineViewBoards } from 'react-icons/hi';\r\nimport { BoardList } from '../cmps/board/BoardList';\r\nimport { utilService } from '../services/util.service.js';\r\nimport { userService } from '../services/user.service.js';\r\nimport { BsPlus } from 'react-icons/bs';\r\nimport { BoardBackground } from '../cmps/board/BoardBackground.jsx';\r\nimport { ModalHeader } from '../cmps/shared/ModalHeader.jsx';\r\nimport { Loading } from '../cmps/shared/Loading.jsx';\r\nimport { BoardBackgroundImg } from '../cmps/board/BoardBackgroundImg.jsx';\r\nimport { socketService } from '../services/socket.service';\r\n\r\nclass _Boards extends Component {\r\n    state = {\r\n        isModalOpen: false,\r\n        board: {\r\n            title: '',\r\n            style: {\r\n                bgc: '#B1D3DD',\r\n                bgcImg: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.loadBoards();\r\n        socketService.setup();\r\n        socketService.on('board added', msg => {\r\n            this.loadBoards();\r\n        })\r\n        socketService.on('board removed', msg => {\r\n            console.log(msg);\r\n            this.loadBoards();\r\n        })\r\n    }\r\n\r\n    async loadBoards() {\r\n        try {\r\n            this.props.loadBoards();\r\n        } catch (err) {\r\n            console.log('Error at loading boards:', err)\r\n        }\r\n    }\r\n\r\n    newBoardModal = () => {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen });\r\n    }\r\n\r\n    chooseBgc = (style) => {\r\n        const board = { ...this.state.board };\r\n        board.style = style;\r\n        this.setState({ board });\r\n    }\r\n\r\n    chooseBgcImg = (style) => {\r\n        const board = { ...this.state.board };\r\n        board.style.bgcImg = style;\r\n        this.setState({ board });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        var board = { ...this.state.board };\r\n        var { name, value } = ev.target;\r\n        board[name] = value;\r\n        this.setState({ board })\r\n    }\r\n\r\n    onAddBoard = (ev) => {\r\n        ev.preventDefault();\r\n        const boardTitle = this.state.board.title;\r\n        const boardBgc = this.state.board.style.bgc;\r\n        const boardBgcImg = this.state.board.style.bgcImg;\r\n        const board = this.createBoard(boardTitle, boardBgc, boardBgcImg);\r\n        console.log(board);\r\n        const { addBoard } = this.props;\r\n        const user = (this.props.user) ? this.props.user : utilService.getGuestUser();\r\n        board.activities.unshift(utilService.addActivity(user, `added ${boardTitle}`, null, null, null, ' WePlan'));\r\n        addBoard(board);\r\n        this.loadBoards();\r\n        this.newBoardModal()\r\n        // this.props.history.push(`/board/${board._id}`);\r\n    }\r\n\r\n\r\n    createBoard = (title, bgc, img) => {\r\n        const { user } = this.props\r\n        const board = {\r\n            title,\r\n            createdAt: Date.now(),\r\n            createdBy: user || utilService.getGuestUser(),\r\n            style: {\r\n                bgc,\r\n                img\r\n            },\r\n            labels: [],\r\n            members: [user || utilService.getGuestUser()],\r\n            groups: [],\r\n            activities: [],\r\n        }\r\n        return board;\r\n    }\r\n\r\n\r\n    render() {\r\n        const { boards } = this.props;\r\n        const { isModalOpen } = this.state;\r\n        if (!boards) return <Loading />\r\n        return (\r\n            <section className=\"boardApp-main\">\r\n                <span className=\"boardApp-header\">\r\n                    <SectionTitle className=\"boards-page\" Icon={HiOutlineViewBoards}> Boards</SectionTitle>\r\n                </span>\r\n                <div className=\"boards-container\">\r\n                    <div className=\"boardAdd\" onClick={this.newBoardModal}><BsPlus /> Add a new board</div>\r\n                    <BoardList boards={boards} />\r\n                </div>\r\n                {isModalOpen && <div className=\"boardAdd-modal\">\r\n                    <ModalHeader title='New Board' closeModal={this.newBoardModal} />\r\n                    <input className=\"boardAdd-input\" type=\"text\" name=\"title\" id=\"title\" placeholder=\"Add board title\" autoComplete=\"off\" spellCheck=\"false\" required onChange={this.handleChange} />\r\n                    <BoardBackground onBoardsCompose={true} chooseBgc={this.chooseBgc} />\r\n                    <BoardBackgroundImg chooseBgcImg={this.chooseBgcImg} />\r\n                    <button className=\"primary-btn\" onClick={this.onAddBoard}>Create Board</button>\r\n                </div>\r\n                }\r\n            </section >\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardModule.boards,\r\n        user: state.userModule.loggedInUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addBoard\r\n}\r\n\r\n\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards)","export default __webpack_public_path__ + \"static/media/logo.d5ab8856.jpeg\";","import React from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { refreshTokenSetup } from '../../services/google.service';\r\n\r\n\r\nconst clientId = '769637694802-vf75osrds0ldm86vk8q2o9n5hjvbs5k1.apps.googleusercontent.com';\r\n\r\n\r\nexport function LoginGoogle({ submitUser, setMsg }) {\r\n    const onSuccess = (res) => {\r\n        const googleUser = res.profileObj\r\n        // console.log('GOOGLE PROFILE', googleUser);\r\n        const user = {\r\n            email: googleUser.email,\r\n            fullname: googleUser.name,\r\n            username: googleUser.email,\r\n            imgUrl: googleUser.imageUrl,\r\n            password: googleUser.googleId\r\n        }\r\n        const isGoogle = true\r\n        submitUser(user, isGoogle)\r\n        // console.log('add user',user);\r\n        refreshTokenSetup(res);\r\n\r\n    };\r\n\r\n    const onFailure = (res) => {\r\n        console.log('Login failed: res:', res);\r\n        setMsg('Failed to login with google')\r\n    };\r\n\r\n    return (\r\n        <div className=\"google-login-button\">\r\n            <GoogleLogin\r\n                clientId={clientId}\r\n                buttonText=\"Continue with Google\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n                isSignedIn={true}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const refreshTokenSetup = (res) => {\r\n    // Timing to renew access token\r\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n  \r\n    const refreshToken = async () => {\r\n      const newAuthRes = await res.reloadAuthResponse();\r\n      refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n      // saveUserToken(newAuthRes.access_token);  <-- save new token\r\n      localStorage.setItem(\"authToken\", newAuthRes.id_token);\r\n  \r\n      // Setup the other timer after the first one\r\n      setTimeout(refreshToken, refreshTiming);\r\n    };\r\n  \r\n    // Setup first refresh timer\r\n    setTimeout(refreshToken, refreshTiming);\r\n  };\r\n  \r\n\r\n  ","import { Component, Fragment } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport {LoginGoogle} from './GoogleLogin';\r\n\r\nexport class UserLogin extends Component {\r\n    state = {\r\n        txt: '',\r\n        password: '',\r\n    }\r\n\r\n\r\n    handleChange = ({ target }) => {\r\n        const value = target.value\r\n        const field = target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n    onSubmitUser = (ev) => {\r\n        ev.preventDefault()\r\n        const { txt, password } = this.state\r\n        const { submitUser, setMsg } = this.props\r\n\r\n        if (password.length < 7) return setMsg('Password must include 7 letters or numbers')\r\n        if (txt.length < 4) return setMsg('User name / email must include 4 letters or numbers')\r\n        if (!password || !txt) return setMsg('Please fill all fields')\r\n        submitUser(this.state, false)\r\n    }\r\n\r\n    render() {\r\n        const { toggleNewUser, submitUser, setMsg } = this.props\r\n        return (\r\n            <Fragment>\r\n\r\n                <main className=\"user-login-container\">\r\n                    <h3>Log in to WePlan</h3>\r\n                    <form className=\"inputs-container\">\r\n                        <input type=\"text\" name=\"txt\" placeholder=\"Enter username or email\" autoFocus=\"autofocus\" onChange={this.handleChange} spellCheck=\"false\" />\r\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange} spellCheck=\"false\" />\r\n                        <button onClick={this.onSubmitUser}>Log In</button>\r\n\r\n                    </form>\r\n                    <NavLink to=\"/signup\" onClick={toggleNewUser}>Dont have account yet?<span> Sign up for free!</span> </NavLink>\r\n\r\n                <h5 className=\"social-login\">or</h5>\r\n               \r\n                    {/* GOOGLE LOGIN */}\r\n                    <LoginGoogle submitUser={submitUser} setMsg={setMsg} />\r\n                    \r\n                </main>\r\n          \r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import { Component, Fragment } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport {LoginGoogle} from './GoogleLogin';\r\n\r\nexport class UserSignup extends Component {\r\n    state = {\r\n        fullname: '',\r\n        username: '',\r\n        email: '',\r\n        imgUrl: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n        googleId: ''\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const { fullname, password, email, passwordConfirm, username } = this.state\r\n        const { submitUser, setMsg } = this.props\r\n\r\n        if (!password || !fullname || !email || !passwordConfirm || !username) return setMsg('Please fill all fields')\r\n        if (password.length < 7) return setMsg('Password must include 7 letters or numbers')\r\n        if (password !== passwordConfirm) return setMsg('Passwords not match')\r\n        if (username.length < 4) return setMsg('User name must include at least 4 letters or numbers')\r\n\r\n        delete this.state.passwordConfirm\r\n        submitUser(this.state, false)\r\n        this.setState({\r\n            fullname: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            googleId: ''\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    handleChange = ({ target }) => {\r\n        const value = target.value\r\n        const field = target.name\r\n        this.setState({ [field]: value })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { toggleNewUser, submitUser, setMsg } = this.props\r\n        return (\r\n            <Fragment>\r\n\r\n            <main>\r\n                <h3>Sign Up!</h3>\r\n\r\n                <form className=\"user-signup-container \">\r\n\r\n                    <label htmlFor=\"fullname\">Full name</label>\r\n                    <input type=\"text\" name=\"fullname\" placeholder=\"Full name\" id=\"fullname\" onChange={this.handleChange} spellCheck=\"false\"/>\r\n\r\n                    <label htmlFor=\"username\">User name</label>\r\n                    <input type=\"text\" name=\"username\" placeholder=\"User name\" id=\"username\" onChange={this.handleChange} spellCheck=\"false\"/>\r\n\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\"  placeholder=\"example@mail.com\" onChange={this.handleChange} spellCheck=\"false\"/>\r\n\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" placeholder=\"Enter password (must contain at least 7 digits\" name=\"password\" id=\"password\" onChange={this.handleChange} spellCheck=\"false\"/>\r\n\r\n                    <label htmlFor=\"passwordConfirm\">Confirm password</label>\r\n                    <input type=\"password\" placeholder=\"Confirm password\" name=\"passwordConfirm\" id=\"passwordConfirm\" onChange={this.handleChange} spellCheck=\"false\"/>\r\n\r\n                </form>\r\n                <button className=\"user-signup-btn\" onClick={this.onSubmit}>Submit!</button>\r\n                <NavLink to=\"/login\" onClick={toggleNewUser}>Already have an account?<span> Login!</span></NavLink>\r\n                \r\n                <h5 className=\"social-login\">or</h5>\r\n \r\n                    {/* GOOGLE LOGIN */}\r\n                <LoginGoogle submitUser={submitUser} setMsg={setMsg}/>\r\n    \r\n            </main>\r\n\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { GoogleLogout } from 'react-google-login';\r\n\r\nconst clientId = '769637694802-vf75osrds0ldm86vk8q2o9n5hjvbs5k1.apps.googleusercontent.com';\r\n\r\n\r\nexport function LogoutGoogle() {\r\n    const onSuccess = () => {\r\n        console.log('Logout made successfully');\r\n    };\r\n    return (\r\n        <GoogleLogout\r\n            clientId={clientId}\r\n            buttonText=\"Yes\"\r\n            className=\"logout-btn\"\r\n            onLogoutSuccess={onSuccess}\r\n            icon={false}\r\n        >\r\n        </GoogleLogout>\r\n    );\r\n}\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport { Component, Fragment } from \"react\";\r\nimport { CgClose } from 'react-icons/cg';\r\nimport { LogoutGoogle } from './GoogleLogout';\r\nimport MemberAvatar from '../shared/MemberAvatar';\r\n\r\n\r\nexport class UserLogout extends Component {\r\n    state = {\r\n        isCheckLogout: false\r\n    }\r\n\r\n    onUserLogout = () => {\r\n        this.setState({ isCheckLogout: true })\r\n    }\r\n\r\n    onUserLogoutRes = (res) => {\r\n        if (res) {\r\n            this.props.userLogout()\r\n        }\r\n        else this.setState({ isCheckLogout: false })\r\n    }\r\n\r\n    render() {\r\n        const { isCheckLogout } = this.state\r\n        const { setMsg, loggedInUser } = this.props\r\n        const { fullname, email } = loggedInUser\r\n        return (\r\n            <main>\r\n                <h3>Logout of your WePlan account</h3>\r\n\r\n                <div className=\"user-logout-container\">\r\n                    <MemberAvatar member={this.props.loggedInUser} />\r\n                    <div>\r\n                        <h5>{fullname}</h5>\r\n                        <h6>{email}</h6>\r\n                    </div>\r\n                </div>\r\n\r\n                {!isCheckLogout && <button onClick={this.onUserLogout}>Log out</button>}\r\n\r\n                {isCheckLogout && <div className=\"user-logout-auth\">\r\n                    <h6>Are you sure you want to logout?</h6>\r\n\r\n                    <div className=\"yes-no-btns\">\r\n                        <div onClick={this.onUserLogoutRes}><LogoutGoogle /></div>\r\n                        <CgClose className=\"cancel-btn\" onClick={() => this.onUserLogoutRes(false)} />\r\n                    </div>\r\n\r\n                </div>}\r\n\r\n            </main>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport logo from '../assets/img/logo.jpeg'\r\nimport { connect } from 'react-redux'\r\nimport { UserLogin } from '../cmps/user/UserLogin'\r\nimport { UserSignup } from '../cmps/user/UserSignup'\r\nimport { UserLogout } from '../cmps/user/UserLogout'\r\nimport { setUser, logout } from '../store/actions/user.actions'\r\n\r\nclass _LoginSignup extends Component {\r\n    state = {\r\n        msg: '',\r\n        isNewUser: false,\r\n    }\r\n\r\n    submitUser = async (user, isGoogle) => {\r\n        const { isNewUser } = this.state\r\n        const { setUser } = this.props\r\n        try {\r\n            await setUser(user, isNewUser, isGoogle)\r\n            this.setState({ msg: '' })\r\n            if (this.props.loggedInUser) this.props.history.push(`/board`)\r\n            else {\r\n                this.props.history.push(`/login`)\r\n                this.setState({ msg: 'user name or password not matching' })\r\n            }\r\n\r\n        } catch (err) {\r\n            this.setState({ msg: 'having some issues, try again please' })\r\n            console.log(err, 'error in submitUser: ', err);\r\n            this.props.history.push(`/login`)\r\n        }\r\n    }\r\n\r\n    userLogout = async () => {\r\n        await this.props.logout()\r\n        try {\r\n            this.props.history.push(`/`)\r\n            this.setState({ isNewUser: true })\r\n        } catch (err) {\r\n            console.log(err, 'error in userLogout: ', err);\r\n        }\r\n    }\r\n\r\n\r\n    toggleNewUser = () => {\r\n        this.setState({ isNewUser: !this.state.isNewUser });\r\n    }\r\n    // toggleGoogle = () => {\r\n    //     this.setState({ isGoogle: !this.state.isGoogle });\r\n    // }\r\n\r\n    setMsg = (msg) => {\r\n        this.setState({ ...this.state, msg })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { msg, isNewUser } = this.state\r\n        const { setUser, loggedInUser } = this.props\r\n        return (\r\n            <section className='user-log-page'>\r\n\r\n                <header >\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <h1>WePlan</h1>\r\n                </header>\r\n\r\n                <span>{msg}</span>\r\n\r\n                {/* LOGIN */}\r\n                {!loggedInUser && !isNewUser && <UserLogin\r\n                    setMsg={this.setMsg}\r\n                    submitUser={this.submitUser}\r\n                    setUser={setUser}\r\n                    toggleNewUser={this.toggleNewUser}\r\n                />}\r\n\r\n                {/* SIGNUP */}\r\n                {!loggedInUser && isNewUser && <UserSignup\r\n                    setMsg={this.setMsg}\r\n                    submitUser={this.submitUser}\r\n                    toggleNewUser={this.toggleNewUser}\r\n                />}\r\n\r\n                {/* LOGOUT */}\r\n                {loggedInUser && <UserLogout\r\n                    userLogout={this.userLogout}\r\n                    loggedInUser={loggedInUser}\r\n                />}\r\n\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setUser,\r\n    logout\r\n}\r\n\r\n\r\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup)\r\n","import { Home } from './pages/Home.jsx';\r\nimport { WePlanApp } from './pages/WePlanApp.jsx';\r\nimport { Boards } from './pages/Boards.jsx';\r\nimport { LoginSignup } from './pages/LoginSignup.jsx'\r\n\r\nexport const routes = [\r\n    {\r\n\r\n        path: '/board/:boardId',\r\n        component: WePlanApp,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: Boards,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: LoginSignup,\r\n    },\r\n    {\r\n        path: '/logout',\r\n        component: LoginSignup,\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: LoginSignup,\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n\r\n]","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { BiHomeAlt } from 'react-icons/bi';\r\nimport { HiOutlineViewBoards } from 'react-icons/hi';\r\nimport { Component } from 'react';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport MemberAvatar from './shared/MemberAvatar'\r\nimport { connect } from 'react-redux';\r\nimport { utilService } from '../services/util.service';\r\n\r\n\r\nclass _Header extends Component {\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        return (\r\n            <header className=\"app-header\">\r\n                <nav>\r\n                    <div className=\"header-format first\"><NavLink to=\"/\"><BiHomeAlt /></NavLink></div>\r\n                    <div className=\"header-format\"><NavLink to=\"/board\" className=\"boards-btn\"><HiOutlineViewBoards /><span className=\"board\">Boards</span></NavLink></div>\r\n                </nav>\r\n                <div ><NavLink to=\"/\"><h1>WePLAN</h1></NavLink></div>\r\n                {!user && <div className=\"user-avatar\"><NavLink to=\"/login\"><span className=\"header-format\">Login</span></NavLink></div>}\r\n                {user && <div className=\"user-avatar\"><NavLink to=\"/logout\"><MemberAvatar member={user} key={user._id} /></NavLink></div>}\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userModule.loggedInUser,\r\n    }\r\n}\r\n\r\nexport const Header = connect(mapStateToProps)(_Header)\r\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { routes } from './routes.js';\r\nimport { Header } from \"./cmps/Header.jsx\";\r\nimport { Component } from 'react';\r\n\r\n\r\nclass _App extends Component {\r\n    state = {\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            // <div>\r\n                <Router>\r\n                    <Header>\r\n                    </Header>\r\n                    <main>\r\n                    <Switch>\r\n                        {routes.map(route => <Route key={route.path} component={route.component} path={route.path} />)}\r\n                    </Switch>\r\n                    </main>\r\n                </Router>\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App);\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    boards: null,\r\n    board: null,\r\n\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARD':\r\n            return { ...state, board: action.board }\r\n        case 'ADD_BOARD':\r\n            return { ...state, boards: [action.board, ...state.boards] }\r\n        case 'REMOVE_BOARD':\r\n            return { ...state, boards: state.boards.filter(board => board._id !== action.boardId) }\r\n        case 'UPDATE_BOARD':\r\n            return { ...state, boards: [action.board, ...state.boards.filter(board => action.board._id !== board._id)] }\r\n        case 'SET_BOARDS':\r\n            return { ...state, boards: action.boards }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.loggedUser }\r\n      case \"CLEAR_USER\":\r\n        return { ...state, loggedInUser: null };\r\n    // case 'REMOVE_USER':\r\n    //   return { ...state, users: state.users.filter(user => user._id !== action.userId) }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { boardReducer } from './reducers/board.reducer';\r\nimport { userReducer } from './reducers/user.reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    boardModule: boardReducer,\r\n    userModule: userReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(ReduxThunk))) //Passing the reducer\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from \"./store/store.js\";\nimport './assets/styles/styles.scss'\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}